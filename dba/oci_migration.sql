
set define off;

--------------------------------------------------------
--  DDL for Table COUNTRY
--------------------------------------------------------

CREATE TABLE "COUNTRY" ("ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "ISO" VARCHAR2(2), "NAME" VARCHAR2(80), "FORMATTED_NAME" VARCHAR2(80), "ISO3" VARCHAR2(3), "NUMCODE" NUMBER, "PHONECODE" NUMBER);


--------------------------------------------------------
--  DDL for Table COURSE_STROKES
--------------------------------------------------------

CREATE TABLE "COURSE_STROKES" ("COURSE_CODE" VARCHAR2(5 CHAR), "COURSE_ID" NUMBER, "H1" NUMBER(*,0), "H2" NUMBER(*,0), "H3" NUMBER(*,0), "H4" NUMBER(*,0), "H5" NUMBER(*,0), "H6" NUMBER(*,0), "H7" NUMBER(*,0), "H8" NUMBER(*,0), "H9" NUMBER(*,0), "H10" NUMBER(*,0), "H11" NUMBER(*,0), "H12" NUMBER(*,0), "H13" NUMBER(*,0), "H14" NUMBER(*,0), "H15" NUMBER(*,0), "H16" NUMBER(*,0), "H17" NUMBER(*,0), "H18" NUMBER(*,0));


set define off;

--------------------------------------------------------
--  DDL for Table OG_WEEKS_TMP
--------------------------------------------------------

  CREATE TABLE "OG_WEEKS_TMP" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "WEEK" VARCHAR2(50), "EASY" VARCHAR2(50), "HARD" VARCHAR2(50), "WHEN" DATE);


set define off;

--------------------------------------------------------
--  DDL for Table WMG_BADGE_TYPES
--------------------------------------------------------

  CREATE TABLE "WMG_BADGE_TYPES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "CODE" VARCHAR2(10 CHAR), "NAME" VARCHAR2(20 CHAR), "DISPLAY_SEQ" NUMBER(*,0), "DESCRIPTION" VARCHAR2(4000 CHAR), "ICON_CLASS" VARCHAR2(100 CHAR), "SYSTEM_CALCULATED_IND" VARCHAR2(1 CHAR) DEFAULT 'N', "SELECTABLE_IND" VARCHAR2(1 CHAR) DEFAULT 'N', "ACTIVE_IND" VARCHAR2(1 CHAR) DEFAULT 'Y', "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(255 CHAR));

   COMMENT ON TABLE "WMG_BADGE_TYPES"  IS 'Badges that a player can earn';




set define off;

--------------------------------------------------------
--  DDL for Table WMG_CONSTRAINT_LOOKUP
--------------------------------------------------------

  CREATE TABLE "WMG_CONSTRAINT_LOOKUP" ("CONSTRAINT_NAME" VARCHAR2(128), "MESSAGE" VARCHAR2(4000));


set define off;

--------------------------------------------------------
--  DDL for Table WMG_COURSES
--------------------------------------------------------

drop table  "WMG_COURSES" ;

  CREATE TABLE "WMG_COURSES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "CODE" VARCHAR2(5 CHAR), "NAME" VARCHAR2(255 CHAR), "COURSE_MODE" VARCHAR2(1 CHAR), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR), "RELEASE_ORDER" NUMBER, "RELEASE_DATE" DATE
                              , "COURSE_GROUP" VARCHAR2(2 CHAR) GENERATED ALWAYS AS (SUBSTR("CODE",1,2)) VIRTUAL
   , "FACTOIDS" VARCHAR2(4000), "COURSE_EMOJI" VARCHAR2(60 CHAR), "TOURNAMENT_EXCLUDED_FLAG" VARCHAR2(1));

   COMMENT ON COLUMN "WMG_COURSES"."FACTOIDS" IS 'Juicy tidbits of information';
   COMMENT ON TABLE "WMG_COURSES"  IS 'Master List of available courses';






set define off;

--------------------------------------------------------
--  DDL for Table WMG_COURSE_PREVIEWS
--------------------------------------------------------

  CREATE TABLE "WMG_COURSE_PREVIEWS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "COURSE_ID" NUMBER, "HOLE" NUMBER(*,0), "SAME_AS_ID" NUMBER, "IMAGE_PREVIEW" BLOB, "MIMETYPE" VARCHAR2(255), "FILENAME" VARCHAR2(400), "IMAGE_LAST_UPDATE" TIMESTAMP (6) WITH LOCAL TIME ZONE, "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));

   COMMENT ON COLUMN "WMG_COURSE_PREVIEWS"."SAME_AS_ID" IS 'ID of a whole image that looks the same';
   COMMENT ON TABLE "WMG_COURSE_PREVIEWS"  IS 'Preview images per hole';




--------------------------------------------------------
--  DDL for Table WMG_COURSE_STROKES
--------------------------------------------------------

  CREATE TABLE "WMG_COURSE_STROKES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "COURSE_ID" NUMBER, "H1" NUMBER(*,0), "H2" NUMBER(*,0), "H3" NUMBER(*,0), "H4" NUMBER(*,0), "H5" NUMBER(*,0), "H6" NUMBER(*,0), "H7" NUMBER(*,0), "H8" NUMBER(*,0), "H9" NUMBER(*,0), "H10" NUMBER(*,0), "H11" NUMBER(*,0), "H12" NUMBER(*,0), "H13" NUMBER(*,0), "H14" NUMBER(*,0), "H15" NUMBER(*,0), "H16" NUMBER(*,0), "H17" NUMBER(*,0), "H18" NUMBER(*,0));

   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H1" IS 'hole 1 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H2" IS 'hole 2 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H3" IS 'hole 3 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H4" IS 'hole 4 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H5" IS 'hole 5 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H6" IS 'hole 6 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H7" IS 'hole 7 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H8" IS 'hole 8 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H9" IS 'hole 9 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H10" IS 'hole 10 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H11" IS 'hole 11 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H12" IS 'hole 12 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H13" IS 'hole 13 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H14" IS 'hole 14 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H15" IS 'hole 15 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H16" IS 'hole 16 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H17" IS 'hole 17 par value';
   COMMENT ON COLUMN "WMG_COURSE_STROKES"."H18" IS 'hole 18 par value';
   COMMENT ON TABLE "WMG_COURSE_STROKES"  IS 'Par values for each hole on a course';








































set define off;

--------------------------------------------------------
--  DDL for Table WMG_ISSUES
--------------------------------------------------------
drop TABLE "WMG_ISSUES";
  CREATE TABLE "WMG_ISSUES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "DISPLAY_SEQ" NUMBER, "CODE" VARCHAR2(10), "NAME" VARCHAR2(32), "ICON" VARCHAR2(200), "DESCRIPTION" VARCHAR2(200), "ACTIVE_IND" VARCHAR2(1), "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "UPDATED_BY" VARCHAR2(60 CHAR), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "TOURNAMENT_POINTS_OVERRIDE" NUMBER);

   COMMENT ON COLUMN "WMG_ISSUES"."ID" IS 'Primary Key ID';
   COMMENT ON COLUMN "WMG_ISSUES"."DISPLAY_SEQ" IS 'Order for displaying the lines';
   COMMENT ON COLUMN "WMG_ISSUES"."ACTIVE_IND" IS 'Is the record enabled Y/N?';
   COMMENT ON COLUMN "WMG_ISSUES"."CREATED_BY" IS 'User that created this record';
   COMMENT ON COLUMN "WMG_ISSUES"."CREATED_ON" IS 'Date the record was first created';
   COMMENT ON COLUMN "WMG_ISSUES"."UPDATED_BY" IS 'User that last modified this record';
   COMMENT ON COLUMN "WMG_ISSUES"."UPDATED_ON" IS 'Date the record was last modified';
   COMMENT ON COLUMN "WMG_ISSUES"."TOURNAMENT_POINTS_OVERRIDE" IS 'If set, this issue will override tournament points when the tournament closes';
   COMMENT ON TABLE "WMG_ISSUES"  IS 'List of wmg_issues';




















set define off;

--------------------------------------------------------
--  DDL for Table WMG_MESSAGES
--------------------------------------------------------

  CREATE TABLE "WMG_MESSAGES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "TO_PLAYER_ID" NUMBER, "MESSAGE_FROM" VARCHAR2(60 CHAR), "MESSAGE" VARCHAR2(4000 CHAR), "DISPLAY_COUNT" NUMBER DEFAULT ON NULL 0, "NEW_MESSAGE_IND" VARCHAR2(1) DEFAULT ON NULL 'Y', "DISPLAY_MODE" VARCHAR2(10) DEFAULT ON NULL 'POPUP', "MESSAGE_DATE" TIMESTAMP (6) WITH TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));

   COMMENT ON COLUMN "WMG_MESSAGES"."ID" IS 'Primary Key ID';
   COMMENT ON COLUMN "WMG_MESSAGES"."DISPLAY_COUNT" IS 'Times the message has been displayed to the player';
   COMMENT ON COLUMN "WMG_MESSAGES"."DISPLAY_MODE" IS 'Displays the message as a popup in full screen mode';
   COMMENT ON COLUMN "WMG_MESSAGES"."CREATED_ON" IS 'Date the record was first created';
   COMMENT ON COLUMN "WMG_MESSAGES"."CREATED_BY" IS 'User that created this record';
   COMMENT ON COLUMN "WMG_MESSAGES"."UPDATED_ON" IS 'Date the record was last modified';
   COMMENT ON COLUMN "WMG_MESSAGES"."UPDATED_BY" IS 'User that last modified this record';
   COMMENT ON TABLE "WMG_MESSAGES"  IS 'List of wmg_messages';


















set define off;

--------------------------------------------------------
--  DDL for Table WMG_NOTES
--------------------------------------------------------

  CREATE TABLE "WMG_NOTES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "NOTE_TYPE" VARCHAR2(20 CHAR), "DISPLAY_SEQ" NUMBER, "NOTES" VARCHAR2(4000 CHAR), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));


set define off;

--------------------------------------------------------
--  DDL for Table WMG_NOTIFICATION_TYPES
--------------------------------------------------------

  CREATE TABLE "WMG_NOTIFICATION_TYPES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "CODE" VARCHAR2(20 CHAR), "NAME" VARCHAR2(60 CHAR), "DISPLAY_SEQ" NUMBER(*,0), "DESCRIPTION" VARCHAR2(4000 CHAR), "ICON_CLASS" VARCHAR2(100 CHAR), "SUPPORTED_METHODS" VARCHAR2(100 CHAR), "PLAYER_SELECTABLE_IND" VARCHAR2(1 CHAR) DEFAULT 'N', "TD_SELECTABLE_IND" VARCHAR2(1 CHAR) DEFAULT 'N', "ACTIVE_IND" VARCHAR2(1 CHAR) DEFAULT 'Y', "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(255 CHAR));

   COMMENT ON COLUMN "WMG_NOTIFICATION_TYPES"."SUPPORTED_METHODS" IS 'Colon delimited list of methods: PUSH,EMAIL,WEBHOOK';
   COMMENT ON TABLE "WMG_NOTIFICATION_TYPES"  IS 'Notifications that a player or TD can select';






set define off;

--------------------------------------------------------
--  DDL for Table WMG_PARAMETERS
--------------------------------------------------------

  CREATE TABLE "WMG_PARAMETERS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "CATEGORY" VARCHAR2(100), "NAME_KEY" VARCHAR2(200), "VALUE" VARCHAR2(4000), "DESCRIPTION" VARCHAR2(4000), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));

   COMMENT ON COLUMN "WMG_PARAMETERS"."CATEGORY" IS 'Informational field to group parameters by functional area. New categories are added by a developer.';
   COMMENT ON COLUMN "WMG_PARAMETERS"."NAME_KEY" IS 'Unique name of a parameter';
   COMMENT ON COLUMN "WMG_PARAMETERS"."VALUE" IS 'Value associated with a parameter';
   COMMENT ON COLUMN "WMG_PARAMETERS"."CREATED_ON" IS 'Date the record was first created';
   COMMENT ON COLUMN "WMG_PARAMETERS"."CREATED_BY" IS 'User that created this record';
   COMMENT ON COLUMN "WMG_PARAMETERS"."UPDATED_ON" IS 'Date the record was last modified';
   COMMENT ON COLUMN "WMG_PARAMETERS"."UPDATED_BY" IS 'User that last modified this record';
   COMMENT ON TABLE "WMG_PARAMETERS"  IS 'System parameters';


















set define off;

--------------------------------------------------------
--  DDL for Table WMG_PLAYERS
--------------------------------------------------------

  CREATE TABLE "WMG_PLAYERS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "ACCOUNT" VARCHAR2(32 CHAR), "NAME" VARCHAR2(60 CHAR), "ACCOUNT_LOGIN" VARCHAR2(100), "PREFERED_TZ" VARCHAR2(20), "COUNTRY_CODE" VARCHAR2(10), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR), "DISCORD_ID" NUMBER, "DISCORD_AVATAR" VARCHAR2(62), "DISCORD_DISCRIMINATOR" VARCHAR2(10), "RANK_CODE" VARCHAR2(10) DEFAULT ON NULL 'NEW');

   COMMENT ON COLUMN "WMG_PLAYERS"."ACCOUNT" IS 'discord name';
   COMMENT ON COLUMN "WMG_PLAYERS"."DISCORD_AVATAR" IS 'Get an avatar via https://cdn.discordapp.com/avatars/{G_DISCORD_ID}/{G_DISCORD_AVATAR}.png';






set define off;

--------------------------------------------------------
--  DDL for Table WMG_PLAYER_BADGES
--------------------------------------------------------

  CREATE TABLE "WMG_PLAYER_BADGES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "BADGE_TYPE_CODE" VARCHAR2(10), "TOURNAMENT_SESSION_ID" NUMBER, "PLAYER_ID" NUMBER, "BADGE_COUNT" NUMBER(*,0) DEFAULT 0, "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(255 CHAR));


set define off;

--------------------------------------------------------
--  DDL for Table WMG_PLAYER_UNICORNS
--------------------------------------------------------

  CREATE TABLE "WMG_PLAYER_UNICORNS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "COURSE_ID" NUMBER, "PLAYER_ID" NUMBER, "H" NUMBER(*,0) DEFAULT 0, "ATTEMPT_COUNT" NUMBER, "SCORE_TOURNAMENT_SESSION_ID" NUMBER, "AWARD_TOURNAMENT_SESSION_ID" NUMBER, "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(255 CHAR), "REPEAT_COUNT" NUMBER);

   COMMENT ON COLUMN "WMG_PLAYER_UNICORNS"."ATTEMPT_COUNT" IS 'Times the hole was played before';
   COMMENT ON COLUMN "WMG_PLAYER_UNICORNS"."SCORE_TOURNAMENT_SESSION_ID" IS 'When did the unicorn occur';
   COMMENT ON COLUMN "WMG_PLAYER_UNICORNS"."AWARD_TOURNAMENT_SESSION_ID" IS 'When was the unicorn awarded';
   COMMENT ON COLUMN "WMG_PLAYER_UNICORNS"."REPEAT_COUNT" IS 'Number of times this unicorn has been repated';
   COMMENT ON TABLE "WMG_PLAYER_UNICORNS"  IS 'Earned ace unicorns';












set define off;

--------------------------------------------------------
--  DDL for Table WMG_RANKS
--------------------------------------------------------
drop TABLE "WMG_RANKS";
  CREATE TABLE "WMG_RANKS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "DISPLAY_SEQ" NUMBER, "CODE" VARCHAR2(10), "NAME" VARCHAR2(32), "PROFILE_CLASS" VARCHAR2(32), "LIST_CLASS" VARCHAR2(32), "ACTIVE_IND" VARCHAR2(1), "CREATED_BY" VARCHAR2(60) DEFAULT ON NULL coalesce(
                        sys_context('APEX$SESSION','app_user')
                      , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                      , sys_context('userenv','session_user')
                    ), "CREATED_ON" DATE DEFAULT ON NULL sysdate, "UPDATED_BY" VARCHAR2(60), "UPDATED_ON" DATE);

   COMMENT ON COLUMN "WMG_RANKS"."ID" IS 'Primary Key ID';
   COMMENT ON COLUMN "WMG_RANKS"."DISPLAY_SEQ" IS 'Order for displaying the lines';
   COMMENT ON COLUMN "WMG_RANKS"."PROFILE_CLASS" IS 'Class used to style the player name';
   COMMENT ON COLUMN "WMG_RANKS"."ACTIVE_IND" IS 'Is the record enabled Y/N?';
   COMMENT ON COLUMN "WMG_RANKS"."CREATED_BY" IS 'User that created this record';
   COMMENT ON COLUMN "WMG_RANKS"."CREATED_ON" IS 'Date the record was first created';
   COMMENT ON COLUMN "WMG_RANKS"."UPDATED_BY" IS 'User that last modified this record';
   COMMENT ON COLUMN "WMG_RANKS"."UPDATED_ON" IS 'Date the record was last modified';
   COMMENT ON TABLE "WMG_RANKS"  IS 'List of wmg_ranks';






set define off;

--------------------------------------------------------
--  DDL for Table WMG_ROUNDS
--------------------------------------------------------

  CREATE TABLE "WMG_ROUNDS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "WEEK" VARCHAR2(10), "COURSE_ID" NUMBER, "PLAYERS_ID" NUMBER, "ROUND_PLAYED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "ROOM_NAME" VARCHAR2(255 CHAR), "S1" NUMBER(*,0), "S2" NUMBER(*,0), "S3" NUMBER(*,0), "S4" NUMBER(*,0), "S5" NUMBER(*,0), "S6" NUMBER(*,0), "S7" NUMBER(*,0), "S8" NUMBER(*,0), "S9" NUMBER(*,0), "S10" NUMBER(*,0), "S11" NUMBER(*,0), "S12" NUMBER(*,0), "S13" NUMBER(*,0), "S14" NUMBER(*,0), "S15" NUMBER(*,0), "S16" NUMBER(*,0), "S17" NUMBER(*,0), "S18" NUMBER(*,0), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR), "FINAL_SCORE" NUMBER(*,0), "OVERRIDE_SCORE" NUMBER(*,0), "OVERRIDE_REASON" VARCHAR2(500), "OVERRIDE_BY" VARCHAR2(60 CHAR), "OVERRIDE_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "TOURNAMENT_SESSION_ID" NUMBER);

   COMMENT ON COLUMN "WMG_ROUNDS"."S1" IS 'hole 1 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S2" IS 'hole 2 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S3" IS 'hole 3 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S4" IS 'hole 4 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S5" IS 'hole 5 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S6" IS 'hole 6 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S7" IS 'hole 7 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S8" IS 'hole 8 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S9" IS 'hole 9 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S10" IS 'hole 10 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S11" IS 'hole 11 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S12" IS 'hole 12 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S13" IS 'hole 13 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S14" IS 'hole 14 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S15" IS 'hole 15 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S16" IS 'hole 16 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S17" IS 'hole 17 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."S18" IS 'hole 18 score';
   COMMENT ON COLUMN "WMG_ROUNDS"."FINAL_SCORE" IS 'Score submitted by the player';
   COMMENT ON COLUMN "WMG_ROUNDS"."OVERRIDE_SCORE" IS 'Score entered by an admin';
   COMMENT ON COLUMN "WMG_ROUNDS"."OVERRIDE_REASON" IS 'Reason for the admin to change the score';
   COMMENT ON COLUMN "WMG_ROUNDS"."OVERRIDE_BY" IS 'Person entering the override';
   COMMENT ON COLUMN "WMG_ROUNDS"."OVERRIDE_ON" IS 'Date the override was entered';
   COMMENT ON TABLE "WMG_ROUNDS"  IS 'Rounds by a player on a specific course';


















































set define off;

--------------------------------------------------------
--  DDL for Table WMG_STREAMS
--------------------------------------------------------

  CREATE TABLE "WMG_STREAMS" ("ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "PLAYER1_ID" NUMBER, "PLAYER2_ID" NUMBER, "PLAYER1_GBCOLOR" VARCHAR2(20), "PLAYER2_BGCOLOR" VARCHAR2(20), "PLAYER1_COLOR" VARCHAR2(20), "PLAYER2_COLOR" VARCHAR2(20), "ROUNDS_TOTAL" NUMBER, "COURSE1_ID" NUMBER, "COURSE2_ID" NUMBER, "ROOM_NAME" VARCHAR2(20), "PLAY_MODE" VARCHAR2(10), "STARTED_FLAG" VARCHAR2(1), "STREAM_DATE" TIMESTAMP (6) WITH LOCAL TIME ZONE, "NOTES" VARCHAR2(4000), "ACTIVE_IND" VARCHAR2(1), "CREATED_BY" VARCHAR2(60) DEFAULT ON NULL coalesce(
                        sys_context('APEX$SESSION','app_user')
                      , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                      , sys_context('userenv','session_user')
                    ), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "UPDATED_BY" VARCHAR2(60), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE);

   COMMENT ON COLUMN "WMG_STREAMS"."ID" IS 'Primary Key ID';
   COMMENT ON COLUMN "WMG_STREAMS"."ACTIVE_IND" IS 'Is the record enabled Y/N?';
   COMMENT ON COLUMN "WMG_STREAMS"."CREATED_BY" IS 'User that created this record';
   COMMENT ON COLUMN "WMG_STREAMS"."CREATED_ON" IS 'Date the record was first created';
   COMMENT ON COLUMN "WMG_STREAMS"."UPDATED_BY" IS 'User that last modified this record';
   COMMENT ON COLUMN "WMG_STREAMS"."UPDATED_ON" IS 'Date the record was last modified';
   COMMENT ON TABLE "WMG_STREAMS"  IS 'List of streams';





set define off;

--------------------------------------------------------
--  DDL for Table WMG_STREAM_ROUND
--------------------------------------------------------

  CREATE TABLE "WMG_STREAM_ROUND" ("ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "STREAM_ID" NUMBER, "CURRENT_ROUND" NUMBER DEFAULT ON NULL 0, "CURRENT_COURSE_ID" NUMBER, "CURRENT_HOLE" NUMBER DEFAULT ON NULL 1, "CURRENT_HOLE_PAR" NUMBER DEFAULT ON NULL 3, "PLAYER1_ROUND1_SCORE" NUMBER DEFAULT ON NULL 0, "PLAYER2_ROUND1_SCORE" NUMBER DEFAULT ON NULL 0, "PLAYER1_ROUND2_SCORE" NUMBER DEFAULT ON NULL 0, "PLAYER2_ROUND2_SCORE" NUMBER DEFAULT ON NULL 0, "PLAYER1_SCORE" NUMBER DEFAULT ON NULL 0, "PLAYER2_SCORE" NUMBER DEFAULT ON NULL 0);

   COMMENT ON COLUMN "WMG_STREAM_ROUND"."ID" IS 'Primary Key ID';
   COMMENT ON COLUMN "WMG_STREAM_ROUND"."STREAM_ID" IS 'Stream info';
   COMMENT ON TABLE "WMG_STREAM_ROUND"  IS 'Stream Details';








set define off;

--------------------------------------------------------
--  DDL for Table WMG_STREAM_SCORES
--------------------------------------------------------

  CREATE TABLE "WMG_STREAM_SCORES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "STREAM_ID" NUMBER, "COURSE_NO" NUMBER, "COURSE_ID" NUMBER, "PLAYER_ID" NUMBER, "S1" NUMBER(*,0), "S2" NUMBER(*,0), "S3" NUMBER(*,0), "S4" NUMBER(*,0), "S5" NUMBER(*,0), "S6" NUMBER(*,0), "S7" NUMBER(*,0), "S8" NUMBER(*,0), "S9" NUMBER(*,0), "S10" NUMBER(*,0), "S11" NUMBER(*,0), "S12" NUMBER(*,0), "S13" NUMBER(*,0), "S14" NUMBER(*,0), "S15" NUMBER(*,0), "S16" NUMBER(*,0), "S17" NUMBER(*,0), "S18" NUMBER(*,0), "FINAL_SCORE" NUMBER(*,0), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));

   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S1" IS 'hole 1 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S2" IS 'hole 2 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S3" IS 'hole 3 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S4" IS 'hole 4 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S5" IS 'hole 5 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S6" IS 'hole 6 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S7" IS 'hole 7 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S8" IS 'hole 8 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S9" IS 'hole 9 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S10" IS 'hole 10 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S11" IS 'hole 11 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S12" IS 'hole 12 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S13" IS 'hole 13 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S14" IS 'hole 14 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S15" IS 'hole 15 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S16" IS 'hole 16 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S17" IS 'hole 17 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."S18" IS 'hole 18 score';
   COMMENT ON COLUMN "WMG_STREAM_SCORES"."FINAL_SCORE" IS 'Final Score by the player';
   COMMENT ON TABLE "WMG_STREAM_SCORES"  IS 'Rounds by a player while streaming course';



--------------------------------------------------------
--  DDL for Table WMG_TOURNAMENTS
--------------------------------------------------------

  CREATE TABLE "WMG_TOURNAMENTS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "CODE" VARCHAR2(20 CHAR), "NAME" VARCHAR2(60 CHAR), "PREFIX_TOURNAMENT" VARCHAR2(10 CHAR), "PREFIX_SESSION" VARCHAR2(10 CHAR), "CURRENT_FLAG" VARCHAR2(1 CHAR), "ACTIVE_IND" VARCHAR2(1 CHAR), "URL" VARCHAR2(4000 CHAR), "NOTES" VARCHAR2(4000 CHAR), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR), "START_DATE" DATE, "PREFIX_ROOM_NAME" VARCHAR2(10 CHAR) DEFAULT 'WMGT');

   COMMENT ON COLUMN "WMG_TOURNAMENTS"."PREFIX_TOURNAMENT" IS 'The tournament prefix gets concatenated with the session prefix and round_num to form the "WEEK"';
   COMMENT ON COLUMN "WMG_TOURNAMENTS"."START_DATE" IS 'Date the tournament begins (in UTC time so no TZ)';



--------------------------------------------------------
--  DDL for Table WMG_TOURNAMENT_COURSES
--------------------------------------------------------

  CREATE TABLE "WMG_TOURNAMENT_COURSES" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "TOURNAMENT_SESSION_ID" NUMBER, "COURSE_NO" NUMBER, "COURSE_ID" NUMBER, "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));

   COMMENT ON TABLE "WMG_TOURNAMENT_COURSES"  IS 'Courses to be played on a specific session';




set define off;

--------------------------------------------------------
--  DDL for Table WMG_TOURNAMENT_PLAYERS
--------------------------------------------------------

  CREATE TABLE "WMG_TOURNAMENT_PLAYERS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "TOURNAMENT_SESSION_ID" NUMBER, "PLAYER_ID" NUMBER, "TIME_SLOT" VARCHAR2(5 CHAR), "ROOM_NO" NUMBER, "POINTS" NUMBER, "DISCARDED_POINTS_FLAG" VARCHAR2(1), "ACTIVE_IND" VARCHAR2(1), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR), "VERIFIED_SCORE_FLAG" VARCHAR2(1), "VERIFIED_BY" VARCHAR2(60), "VERIFIED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "VERIFIED_NOTE" VARCHAR2(200), "ISSUE_CODE" VARCHAR2(10), "POINTS_OVERRIDE" NUMBER);

   COMMENT ON COLUMN "WMG_TOURNAMENT_PLAYERS"."POINTS" IS 'Points scored by a player on the session. 1st = 25, 2nd = 21, etc...';
   COMMENT ON COLUMN "WMG_TOURNAMENT_PLAYERS"."DISCARDED_POINTS_FLAG" IS 'Indicates these points have been discarded as 1 out of every 3 sessions gets points discarded';
   COMMENT ON COLUMN "WMG_TOURNAMENT_PLAYERS"."VERIFIED_SCORE_FLAG" IS 'Indicates these scorecard submission has been verified';
   COMMENT ON COLUMN "WMG_TOURNAMENT_PLAYERS"."ISSUE_CODE" IS 'Flag players issues: no scores, no show, infraction';
   COMMENT ON COLUMN "WMG_TOURNAMENT_PLAYERS"."POINTS_OVERRIDE" IS 'Override for regular points. Applied at the time of closing.';
   COMMENT ON TABLE "WMG_TOURNAMENT_PLAYERS"  IS 'Players signed up for a specific session';














set define off;

--------------------------------------------------------
--  DDL for Table WMG_TOURNAMENT_ROOMS
--------------------------------------------------------

  CREATE TABLE "WMG_TOURNAMENT_ROOMS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "TOURNAMENT_SESSION_ID" NUMBER, "TIME_SLOT" VARCHAR2(5 CHAR), "ROOM_NO" NUMBER, "VERIFIED_SCORE_FLAG" VARCHAR2(1), "VERIFIED_BY" VARCHAR2(60), "VERIFIED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "VERIFIED_NOTE" VARCHAR2(200), "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR));

   COMMENT ON COLUMN "WMG_TOURNAMENT_ROOMS"."VERIFIED_SCORE_FLAG" IS 'Indicates the room has been verified';
   COMMENT ON TABLE "WMG_TOURNAMENT_ROOMS"  IS 'Rooms defined for a tournament session';






set define off;

--------------------------------------------------------
--  DDL for Table WMG_TOURNAMENT_SESSIONS
--------------------------------------------------------

  CREATE TABLE "WMG_TOURNAMENT_SESSIONS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "TOURNAMENT_ID" NUMBER, "ROUND_NUM" NUMBER(*,0), "SESSION_DATE" DATE, "WEEK" VARCHAR2(10 CHAR), "OPEN_REGISTRATION_ON" TIMESTAMP (6) WITH TIME ZONE, "CLOSE_REGISTRATION_ON" TIMESTAMP (6) WITH TIME ZONE, "REGISTRATION_CLOSED_FLAG" VARCHAR2(1), "ROOMS_DEFINED_FLAG" VARCHAR2(1), "ROOMS_DEFINED_BY" VARCHAR2(60 CHAR), "ROOMS_DEFINED_ON" TIMESTAMP (6) WITH TIME ZONE, "COMPLETED_IND" VARCHAR2(1) DEFAULT 'N', "COMPLETED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "CREATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT ON NULL current_timestamp, "CREATED_BY" VARCHAR2(60 CHAR) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION','APP_USER'),user), "UPDATED_ON" TIMESTAMP (6) WITH LOCAL TIME ZONE, "UPDATED_BY" VARCHAR2(60 CHAR), "ROOMS_OPEN_FLAG" VARCHAR2(1));

   COMMENT ON COLUMN "WMG_TOURNAMENT_SESSIONS"."WEEK" IS 'If prefixes are specified this value gets derived';
   COMMENT ON COLUMN "WMG_TOURNAMENT_SESSIONS"."ROOMS_OPEN_FLAG" IS 'Allows the room definitions to be visible to all players';






set define off;

--------------------------------------------------------
--  DDL for Table WMG_VERIFICATION_QUEUE
--------------------------------------------------------
drop table WMG_VERIFICATION_QUEUE;

  CREATE TABLE "WMG_VERIFICATION_QUEUE" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE 
                                         , "WEEK" VARCHAR2(10), "EASY_PLAYER_ID" NUMBER, "HARD_PLAYER_ID" NUMBER, "CREATED_BY" VARCHAR2(60) DEFAULT ON NULL coalesce(
                        sys_context('APEX$SESSION','app_user')
                      , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                      , sys_context('userenv','session_user')
                    ), "CREATED_ON" DATE DEFAULT ON NULL sysdate, "UPDATED_BY" VARCHAR2(60), "UPDATED_ON" DATE);

   COMMENT ON COLUMN "WMG_VERIFICATION_QUEUE"."ID" IS 'Primary Key ID';
   COMMENT ON TABLE "WMG_VERIFICATION_QUEUE"  IS 'Helper table for verification of rooms';




set define off;

--------------------------------------------------------
--  DDL for Table WMG_WEBHOOKS
--------------------------------------------------------
drop TABLE "WMG_WEBHOOKS";
  CREATE TABLE "WMG_WEBHOOKS" ("ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , "CODE" VARCHAR2(10), "NAME" VARCHAR2(60), "DESCRIPTION" VARCHAR2(200), "WEBHOOK_URL" VARCHAR2(1000), "ACTIVE_IND" VARCHAR2(1), "CREATED_BY" VARCHAR2(60) DEFAULT ON NULL coalesce(
                        sys_context('APEX$SESSION','app_user')
                      , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                      , sys_context('userenv','session_user')
                    ), "CREATED_ON" DATE DEFAULT ON NULL sysdate, "UPDATED_BY" VARCHAR2(60), "UPDATED_ON" DATE, "OWNER_USERNAME" VARCHAR2(60));

   COMMENT ON COLUMN "WMG_WEBHOOKS"."ID" IS 'Primary Key ID';
   COMMENT ON COLUMN "WMG_WEBHOOKS"."WEBHOOK_URL" IS 'Class used to style the player name';
   COMMENT ON COLUMN "WMG_WEBHOOKS"."ACTIVE_IND" IS 'Is the record enabled Y/N?';
   COMMENT ON COLUMN "WMG_WEBHOOKS"."CREATED_BY" IS 'User that created this record';
   COMMENT ON COLUMN "WMG_WEBHOOKS"."CREATED_ON" IS 'Date the record was first created';
   COMMENT ON COLUMN "WMG_WEBHOOKS"."UPDATED_BY" IS 'User that last modified this record';
   COMMENT ON COLUMN "WMG_WEBHOOKS"."UPDATED_ON" IS 'Date the record was last modified';
   COMMENT ON TABLE "WMG_WEBHOOKS"  IS 'List of Discord Webhooks';







set define off;

--------------------------------------------------------
--  DDL for View WMG_BAR_CHART_COLORS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_BAR_CHART_COLORS" ("SELECTED", "SELECTED_HIGHLIGHT", "REGULAR", "REGULAR_HIGHLIGHT") 
  AS select '#82a372' selected 
     , '#a890b6' selected_highlight  -- plum
     , '#4c825c' regular             -- green
     , '#846a92' regular_highlight   -- plum
from sys.dual
;


--------------------------------------------------------
--  DDL for View WMG_COUNTRY_ISO_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_COUNTRY_ISO_V" ("NAME", "ISO_CODE") AS select d name, r iso_code
from (
select 'England' d, 'england' r from dual union all
select 'Scotland' d, 'scotland' r from dual union all
select 'Wales' d, 'wales' r from dual union all
select formatted_name d, lower(iso) r
from country
)
;


--------------------------------------------------------
--  DDL for View WMG_COURSES_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_COURSES_V" ("COURSE_ID", "RELEASE_ORDER", "RELEASE_DATE", "COURSE_GROUP", "CODE", "NAME", "PREPARED_NAME", "COURSE_MODE", "COURSE_EMOJI", "FACTOIDS", "COURSE_STROKE_ID", "H1", "H2", "H3", "H4", "H5", "H6", "H7", "H8", "H9", "H10", "H11", "H12", "H13", "H14", "H15", "H16", "H17", "H18", "COURSE_PAR", "BEST_UNDER") AS with w_course_best as (
select course_id
     -- , sum(s) best_strokes
     , sum(min_par) best_under
  from (
    select course_id
         , h
         -- , min(score)  s
         , min(par) min_par
    from wmg_rounds_unpivot_mv
   where player_id != 0  -- remove the curated system score
   group by course_id,  h
   )
 group by course_id
)
select 
    c.id                                         course_id,
    c.release_order,
    c.release_date,
    c.course_group,
    c.code                                       code,
    c.name                                       name,
    c.code || ' - ' || c.name prepared_name,
    c.course_mode                                course_mode,
    c.course_emoji,
    c.factoids,
    cs.id                                  course_stroke_id,
    cs.h1,
    cs.h2,
    cs.h3,
    cs.h4,
    cs.h5,
    cs.h6,
    cs.h7,
    cs.h8,
    cs.h9,
    cs.h10,
    cs.h11,
    cs.h12,
    cs.h13,
    cs.h14,
    cs.h15,
    cs.h16,
    cs.h17,
    cs.h18,
    cs.h1+ cs.h2+ cs.h3+ cs.h4+ cs.h5+ cs.h6+ cs.h7+ cs.h8+ cs.h9+ cs.h10+ cs.h11+ cs.h12+ cs.h13+ cs.h14+ cs.h15+ cs.h16+ cs.h17+ cs.h18 course_par
  , cb.best_under
from wmg_courses c
   , wmg_course_strokes cs
   , w_course_best cb
where cs.course_id(+) = c.id
  and cb.course_id(+) = c.id
;


--------------------------------------------------------
--  DDL for View WMG_COURSE_PREVIEWS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_COURSE_PREVIEWS_V" ("ID", "COURSE_ID", "HOLE", "SAME_AS_ID", "IMAGE_PREVIEW", "MIMETYPE", "FILENAME", "IMAGE_LAST_UPDATE", "CREATED_ON", "CREATED_BY", "UPDATED_ON", "UPDATED_BY") AS select p.id
     , p.course_id
     , p.hole
     , p.same_as_id
     , nvl(s.image_preview, p.image_preview) image_preview
     , nvl(s.mimetype, p.mimetype) mimetype
     , nvl(s.filename, p.filename) filename
     , nvl(s.image_last_update, p.image_last_update) image_last_update
     , p.created_on
     , p.created_by
     , p.updated_on
     , p.updated_by
 from wmg_course_previews p
    , wmg_course_previews s
where p.same_as_id = s.id (+)
;



--------------------------------------------------------
--  DDL for View WMG_COURSE_STATS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_COURSE_STATS_V" ("COURSE_ID", "COURSE_CODE", "H", "STD_DEV", "STD_DEV_VAR", "SCORE_AVG", "DIFFICULTY", "ENTRIES") AS with stats as (
   select course_id
        , h
        , round(avg(par),3) par_avg, round(stddev(par),3) std_dev, round(variance(par),3) std_dev_var
        , round(avg(score),3) score_avg, round(stddev(score),2) score_std_dev
        , count(*) entries
    from wmg_rounds_unpivot_mv
   where player_id != 0
   group by course_id, h
)
, strokes as (
   select *
   from wmg_course_strokes
   unpivot (
      (par) for h in (
      (h1) as 1,
      (h2) as 2,
      (h3) as 3,
      (h4) as 4,
      (h5) as 5,
      (h6) as 6,
      (h7) as 7,
      (h8) as 8,
      (h9) as 9,
      (h10) as 10,
      (h11) as 11,
      (h12) as 12,
      (h13) as 13,
      (h14) as 14,
      (h15) as 15,
      (h16) as 16,
      (h17) as 17,
      (h18) as 18
      )
    )
)
select c.id course_id
     , c.code course_code
     , st.h
     , st.std_dev
     , st.std_dev_var
     , st.score_avg
     , st.score_std_dev difficulty
     , st.entries
 from stats st, strokes s
    , wmg_courses c
where st.h = s.h
  and st.course_id = s.course_id
  and s.course_id = c.id
;



--------------------------------------------------------
--  DDL for View WMG_PLAYERS_BEST_ROUND_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_PLAYERS_BEST_ROUND_V" ("PLAYERS_ID", "ROUND_ID", "COURSE_ID", "UNDER_PAR") AS with players_best as (
  select players_id, round_id, course_id, under_par
  from (
    select r.players_id, r.id round_id, r.course_id, coalesce(r.override_score, r.final_score) under_par
         , row_number() over (partition by r.players_id, r.course_id order by coalesce(r.override_score, r.final_score)) rn
     from wmg_rounds r
    -- where (r.players_id = :P140_PLAYER2_ID or r.players_id = :P140_PLAYER_ID)
  )
  where rn = 1
)
select "PLAYERS_ID","ROUND_ID","COURSE_ID","UNDER_PAR"
from players_best
;



--------------------------------------------------------
--  DDL for View WMG_PLAYERS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_PLAYERS_V" ("ID", "ACCOUNT", "NAME", "PLAYER_NAME", "DISCORD_ID", "DISCORD_AVATAR", "DISCORD_DISCRIMINATOR", "ACCOUNT_LOGIN", "PREFERED_TZ", "COUNTRY_CODE", "COUNTRY", "RANK_CODE", "RANK_NAME", "RANK_DISPLAY_SEQ", "RANK_PROFILE_CLASS", "RANK_LIST_CLASS", "AVATAR_IMAGE", "CREATED_ON", "CREATED_BY", "UPDATED_ON", "UPDATED_BY") AS select p.id
     , p.account
     , p.name
     , nvl(p.name, p.account) player_name
     , p.discord_id
     , p.discord_avatar
     , p.discord_discriminator
     , p.account_login
     , p.prefered_tz
     , p.country_code
     , c.name country
     , p.rank_code
     , r.name          rank_name
     , r.display_seq   rank_display_seq
     , r.profile_class rank_profile_class
     , r.list_class    rank_list_class
     , wmg_discord.avatar(p.discord_id, p.discord_avatar) avatar_image
     , p.created_on
     , p.created_by
     , p.updated_on
     , p.updated_by
from wmg_players p
   , wmg_ranks r
   , wmg_country_iso_v c
where p.rank_code = r.code
  and p.country_code = c.iso_code (+)
;



--------------------------------------------------------
--  DDL for View WMG_PLAYER_UNICORNS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_PLAYER_UNICORNS_V" ("ID", "COURSE_ID", "COURSE_RELEASE_ORDER", "COURSE_NAME", "COURSE_MODE", "COURSE_PREPARED_NAME", "PLAYER_ID", "PLAYER_NAME", "H", "ATTEMPT_COUNT", "SCORE_TOURNAMENT_SESSION_ID", "SCORE_WEEK", "SCORE_SESSION_DATE", "AWARD_TOURNAMENT_SESSION_ID", "AWARD_WEEK", "AWARD_SESSION_DATE", "REPEAT_COUNT", "CREATED_ON", "CREATED_BY", "UPDATED_ON", "UPDATED_BY") AS select u.id
     , u.course_id
     , c.release_order course_release_order
     , c.name course_name
     , c.course_mode
     , c.prepared_name course_prepared_name
     , u.player_id
     , p.player_name
     , u.h
     , u.attempt_count
     , u.score_tournament_session_id
     , tss.week         score_week
     , tss.session_date score_session_date
     , u.award_tournament_session_id
     , tsa.week         award_week
     , tsa.session_date award_session_date
     , u.repeat_count
     , u.created_on
     , u.created_by
     , u.updated_on
     , u.updated_by
from wmg_player_unicorns u
 join wmg_courses_v c on c.course_id = u.course_id
 join wmg_players_v p on p.id = u.player_id
 join wmg_tournament_sessions tss on tss.id = u.score_tournament_session_id
 join wmg_tournament_sessions tsa on tsa.id = u.award_tournament_session_id
;


--------------------------------------------------------
--  DDL for View WMG_REGISTRATION_RATE_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_REGISTRATION_RATE_V" ("TOURNAMENT_SESSION_ID", "WEEK", "ENTRIES", "TOTAL_REGISTRATIONS", "AVG_PER_HOUR") AS select tournament_session_id, week, count(*) entries, sum(registrations_per_hour) total_registrations , round(avg(registrations_per_hour),2) avg_per_hour
from (
SELECT 
    ts.id tournament_session_id, ts.week,
    TRUNC(tp.created_on, 'HH24') AS registration_hour,
    COUNT(tp.id) AS registrations_per_hour
FROM 
    wmg_tournament_sessions ts
  , wmg_tournament_players tp
where tp.tournament_session_id = ts.id
-- AND     TRUNC(wmg_tournament_players.created_on) BETWEEN TRUNC(wmg_tournament_sessions.session_date, 'IW') AND TRUNC(wmg_tournament_sessions.session_date, 'IW') + 6
GROUP BY 
    ts.id, ts.week,
    TRUNC(tp.created_on, 'HH24')
)
group by tournament_session_id, week
ORDER BY 
    week desc
;

--------------------------------------------------------
--  DDL for View WMG_ROUNDS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_ROUNDS_V" ("PLAYER_ID", "ACCOUNT", "PLAYER_NAME", "RANK_CODE", "COUNTRY_CODE", "COURSE_ID", "COURSE_CODE", "COURSE_NAME", "COURSE_MODE", "H1", "H2", "H3", "H4", "H5", "H6", "H7", "H8", "H9", "H10", "H11", "H12", "H13", "H14", "H15", "H16", "H17", "H18", "COURSE_PAR", "ROUND_ID", "ROUND_PLAYED_ON", "WEEK", "TOURNAMENT_SESSION_ID", "ROOM_NAME", "S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12", "S13", "S14", "S15", "S16", "S17", "S18", "ROUND_STROKES", "PAR1", "PAR2", "PAR3", "PAR4", "PAR5", "PAR6", "PAR7", "PAR8", "PAR9", "PAR10", "PAR11", "PAR12", "PAR13", "PAR14", "PAR15", "PAR16", "PAR17", "PAR18", "SCORECARD_TOTAL", "UNDER_PAR", "FINAL_SCORE", "OK_FOR_STATS_IND", "SCORE_OVERRIDE_FLAG", "OVERRIDE_REASON", "OVERRIDE_BY", "OVERRIDE_ON", "CREATED_ON", "CREATED_BY", "UPDATED_ON", "UPDATED_BY") AS select 
    p.id                                         player_id,
    p.account                                    account,
    nvl(p.name, p.account)                       player_name,
    p.rank_code,
    p.country_code,
    c.id                                         course_id,
    c.code                                       course_code,
    c.name                                       course_name,
    c.course_mode                                course_mode,
    cs.h1    h1,
    cs.h2    h2,
    cs.h3    h3,
    cs.h4    h4,
    cs.h5    h5,
    cs.h6    h6,
    cs.h7    h7,
    cs.h8    h8,
    cs.h9    h9,
    cs.h10   h10,
    cs.h11   h11,
    cs.h12   h12,
    cs.h13   h13,
    cs.h14   h14,
    cs.h15   h15,
    cs.h16   h16,
    cs.h17   h17,
    cs.h18   h18,
    cs.h1+ cs.h2+ cs.h3+ cs.h4+ cs.h5+ cs.h6+ cs.h7+ cs.h8+ cs.h9+ cs.h10+ cs.h11+ cs.h12+ cs.h13+ cs.h14+ cs.h15+ cs.h16+ cs.h17+ cs.h18 course_par,
    r.id                                          round_id,
    r.round_played_on                             round_played_on,
    r.week,
    r.tournament_session_id,
    r.room_name                                   room_name,
    r.s1,
    r.s2,
    r.s3,
    r.s4,
    r.s5,
    r.s6,
    r.s7,
    r.s8,
    r.s9,
    r.s10,
    r.s11,
    r.s12,
    r.s13,
    r.s14,
    r.s15,
    r.s16,
    r.s17,
    r.s18,
    nvl(r.s1,0)+ nvl(r.s2,0)+ nvl(r.s3,0)+ nvl(r.s4,0)+ nvl(r.s5,0)+ nvl(r.s6,0)+ nvl(r.s7,0)+ nvl(r.s8,0)+ nvl(r.s9,0)+ nvl(r.s10,0)+ nvl(r.s11,0)+ nvl(r.s12,0)+ nvl(r.s13,0)+ nvl(r.s14,0)+ nvl(r.s15,0)+ nvl(r.s16,0)+ nvl(r.s17,0)+ nvl(r.s18,0) round_strokes
    , nvl(r.s1 - cs.h1, 0) par1
    , nvl(r.s2 - cs.h2, 0) par2
    , nvl(r.s3 - cs.h3, 0) par3
    , nvl(r.s4 - cs.h4, 0) par4
    , nvl(r.s5 - cs.h5, 0) par5
    , nvl(r.s6 - cs.h6, 0) par6
    , nvl(r.s7 - cs.h7, 0) par7
    , nvl(r.s8 - cs.h8, 0) par8
    , nvl(r.s9 - cs.h9, 0) par9
    , nvl(r.s10 - cs.h10, 0) par10
    , nvl(r.s11 - cs.h11, 0) par11
    , nvl(r.s12 - cs.h12, 0) par12
    , nvl(r.s13 - cs.h13, 0) par13
    , nvl(r.s14 - cs.h14, 0) par14
    , nvl(r.s15 - cs.h15, 0) par15
    , nvl(r.s16 - cs.h16, 0) par16
    , nvl(r.s17 - cs.h17, 0) par17
    , nvl(r.s18 - cs.h18, 0) par18
  , nvl(r.s1 - cs.h1, 0) +
      nvl(r.s2 - cs.h2, cs.h2 + 4) +
      nvl(r.s3 - cs.h3, cs.h3 + 4) +
      nvl(r.s4 - cs.h4, cs.h4 + 4) +
      nvl(r.s5 - cs.h5, cs.h5 + 4) +
      nvl(r.s6 - cs.h6, cs.h6 + 4) +
      nvl(r.s7 - cs.h7, cs.h7 + 4) +
      nvl(r.s8 - cs.h8, cs.h8 + 4) +
      nvl(r.s9 - cs.h9, cs.h9 + 4) +
      nvl(r.s10 - cs.h10, cs.h10 + 4) +
      nvl(r.s11 - cs.h11, cs.h11 + 4) +
      nvl(r.s12 - cs.h12, cs.h12 + 4) +
      nvl(r.s13 - cs.h13, cs.h13 + 4) +
      nvl(r.s14 - cs.h14, cs.h14 + 4) +
      nvl(r.s15 - cs.h15, cs.h15 + 4) +
      nvl(r.s16 - cs.h16, cs.h16 + 4) +
      nvl(r.s17 - cs.h17, cs.h17 + 4) +
      nvl(r.s18 - cs.h18, cs.h18 + 4) scorecard_total
   , /*
     case 
     when r.override_score is null and r.final_score is null then
      nvl(r.s1 - cs.h1, 0) +
      nvl(r.s2 - cs.h2, 0) +
      nvl(r.s3 - cs.h3, 0) +
      nvl(r.s4 - cs.h4, 0) +
      nvl(r.s5 - cs.h5, 0) +
      nvl(r.s6 - cs.h6, 0) +
      nvl(r.s7 - cs.h7, 0) +
      nvl(r.s8 - cs.h8, 0) +
      nvl(r.s9 - cs.h9, 0) +
      nvl(r.s10 - cs.h10, 0) +
      nvl(r.s11 - cs.h11, 0) +
      nvl(r.s12 - cs.h12, 0) +
      nvl(r.s13 - cs.h13, 0) +
      nvl(r.s14 - cs.h14, 0) +
      nvl(r.s15 - cs.h15, 0) +
      nvl(r.s16 - cs.h16, 0) +
      nvl(r.s17 - cs.h17, 0) +
      nvl(r.s18 - cs.h18, 0) 
    else
    */
      coalesce(r.override_score, r.final_score) under_par
  , r.final_score
  , case when
      r.s1 is null or r.s2 is null or r.s3 is null or r.s4 is null or r.s5 is null or r.s6 is null or r.s7 is null or r.s8 is null or r.s9 is null or r.s10 is null or r.s11 is null or r.s12 is null or r.s13 is null or r.s14 is null or r.s15 is null or r.s16 is null or r.s17 is null or r.s18 is null
      or r.override_score is not null
    then
     'N'
    else
     'Y'
    end ok_for_stats_ind
  , case when r.override_score is null then '' else 'Y' end score_override_flag
  , r.override_reason
  , r.override_by
  , r.override_on
  , r.created_on
  , r.created_by
  , r.updated_on
  , r.updated_by
from 
    wmg_rounds r,
    wmg_players p,
    wmg_courses c,
    wmg_course_strokes cs
where r.players_id = p.id
  and r.course_id = c.id
  and cs.course_id(+) = c.id
;



--------------------------------------------------------
--  DDL for View WMG_TOURNAMENT_PLAYER_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_TOURNAMENT_PLAYER_V" ("TOURNAMENT_ID", "CODE", "NAME", "PREFIX_TOURNAMENT", "PREFIX_SESSION", "CURRENT_FLAG", "TOURNAMENT_ACTIVE_IND", "URL", "NOTES", "TOURNAMENT_CREATED", "TOURNAMENT_CREATED_BY", "TOURNAMENT_UPDATED", "TOURNAMENT_UPDATED_BY", "TOURNAMENT_SESSION_ID", "ROUND_NUM", "SESSION_DATE", "WEEK", "OPEN_REGISTRATION_ON", "CLOSE_REGISTRATION_ON", "ROOMS_OPEN_FLAG", "COMPLETED_IND", "COMPLETED_ON", "TOURNAMENT_SESSION_CREATED", "TOURNAMENT_SESSION_CREATED_BY", "TOURNAMENT_SESSION_UPDATED", "TOURNAMENT_SESSION_UPDATED_BY", "TOURNAMENT_PLAYER_ID", "TIME_SLOT", "ROOM_NO", "POINTS", "DISCARDED_POINTS_FLAG", "ISSUE_CODE", "VERIFIED_SCORE_FLAG", "VERIFIED_NOTE", "VERIFIED_BY", "VERIFIED_ON", "ACTIVE_IND", "TOURNAMENT_PLAYER_CREATED", "TOURNAMENT_PLAYER_CREATED_BY", "TOURNAMENT_PLAYER_UPDATED", "TOURNAMENT_PLAYER_UPDATED_BY", "PLAYER_ID", "PLAYER_NAME", "ACCOUNT", "ACCOUNT_LOGIN", "PREFERED_TZ", "COUNTRY_CODE", "COUNTRY", "RANK_CODE", "RANK_NAME", "RANK_LIST_CLASS", "DISCORD_ID", "DISCORD_AVATAR", "AVATAR_IMAGE") AS select t.id                              tournament_id
     , t.code                            code
     , t.name                            name
     , t.prefix_tournament               prefix_tournament
     , t.prefix_session                  prefix_session
     , t.current_flag                    current_flag
     , t.active_ind                      tournament_active_ind
     , t.url                             url
     , t.notes                           notes
     , t.created_on                      tournament_created
     , t.created_by                      tournament_created_by
     , t.updated_on                      tournament_updated
     , t.updated_by                      tournament_updated_by
     , ts.id                             tournament_session_id
     , ts.round_num                      round_num
     , ts.session_date                   session_date
     , ts.week                           week
     , ts.open_registration_on           open_registration_on
     , ts.close_registration_on          close_registration_on
     , ts.rooms_open_flag                rooms_open_flag
     , ts.completed_ind                  completed_ind
     , ts.completed_on                   completed_on
     , ts.created_on                     tournament_session_created
     , ts.created_by                     tournament_session_created_by
     , ts.updated_on                     tournament_session_updated
     , ts.updated_by                     tournament_session_updated_by
     , tp.id                             tournament_player_id
     , tp.time_slot                      time_slot
     , tp.room_no                        room_no
     , tp.points                         points
     , tp.discarded_points_flag          discarded_points_flag
     , tp.issue_code                     issue_code
     , tp.verified_score_flag
     , tp.verified_note
     , tp.verified_by
     , tp.verified_on
     , tp.active_ind                     active_ind
     , tp.created_on                     tournament_player_created
     , tp.created_by                     tournament_player_created_by
     , tp.updated_on                     tournament_player_updated
     , tp.updated_by                     tournament_player_updated_by
     , p.id                              player_id
     , nvl(p.player_name, '-error-')     player_name
     , p.account                         account
     , p.account_login                   account_login
     , p.prefered_tz
     , p.country_code                    country_code
     , p.country                         country
     , p.rank_code
     , p.rank_name
     , p.rank_list_class
     , p.discord_id
     , p.discord_avatar
     , p.avatar_image
  from wmg_tournaments t
     , wmg_tournament_sessions ts
     , wmg_tournament_players tp
     , wmg_players_v p
 where ts.tournament_id(+) = t.id
   and tp.tournament_session_id(+) = ts.id 
   and tp.player_id = p.id(+)
;



--------------------------------------------------------
--  DDL for View WMG_TOURNAMENT_RESULTS_V
--------------------------------------------------------

CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_TOURNAMENT_RESULTS_V" ("WEEK", "POS", "PLAYER_ID", "PLAYER_NAME", "EASY_ROUND_ID", "HARD_ROUND_ID", "ROUND_CREATED_ON", "EASY_PAR", "HARD_PAR", "TOTAL_SCORE", "EASY_SCORECARD", "HARD_SCORECARD", "TOTAL_SCORECARD") AS select week
     , rank() over (partition by week order by easy_par + hard_par) pos
     , player_id
     , player_name
     , easy_round_id
     , hard_round_id
     , round_created_on
     , easy_par
     , hard_par
     , total_score
     , easy_scorecard
     , hard_scorecard
     , total_scorecard
from (
  select week
  , player_id 
  , player_name
  , easy_round_id
  , hard_round_id
  , greatest(easy_created_on, hard_created_on) round_created_on
  , easy_par
  , hard_par
  , easy_par + hard_par total_score
  , easy_scorecard
  , hard_scorecard
  , easy_scorecard + hard_scorecard total_scorecard
  from (
    select r.week
         , r.player_id
         , r.player_name
         , r.under_par
         , r.scorecard_total
--         , c.course_mode
         , tc.course_no
         , r.round_id
         , r.created_on
      from wmg_rounds_v r
         , wmg_courses c
         , wmg_tournament_courses tc
    where r.course_id = c.id
      and tc.course_id = c.id
      and tc.tournament_session_id = r.tournament_session_id
    )
   pivot (
      sum(under_par) par, sum(scorecard_total) scorecard
    , max(round_id) round_id 
    , max(created_on) created_on 
    for course_no in (
      1 EASY, 2 HARD
     )
    )
)
;


--------------------------------------------------------
--  DDL for View WMG_TOURNAMENT_SESSIONS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_TOURNAMENT_SESSIONS_V" ("TOURNAMENT_ID", "CODE", "NAME", "PREFIX_TOURNAMENT", "PREFIX_SESSION", "URL", "NOTES", "ACTIVE_IND", "TOURNAMENT_SESSION_ID", "ROUND_NUM", "SESSION_DATE", "WEEK", "OPEN_REGISTRATION_ON", "CLOSE_REGISTRATION_ON", "REGISTRATION_CLOSED_FLAG", "ROOMS_OPEN_FLAG", "ROOMS_DEFINED_FLAG", "ROOMS_DEFINED_BY", "ROOMS_DEFINED_ON", "COMPLETED_IND", "COMPLETED_ON", "EASY_COURSE_ID", "EASY_COURSE_CODE", "EASY_COURSE_NAME", "EASY_COURSE_EMOJI", "EASY_RELEASE_ORDER", "HARD_COURSE_ID", "HARD_COURSE_CODE", "HARD_COURSE_NAME", "HARD_COURSE_EMOJI", "HARD_RELEASE_ORDER") AS with courses as (
    select tc.tournament_session_id
         , c.id course_id
         , c.course_mode
         , c.code
         , c.name
         , c.course_emoji
         , c.release_order
         , tc.course_no
    from wmg_tournament_courses tc
       , wmg_courses c
   where tc.course_id = c.id (+)
)
select t.id                              tournament_id
     , t.code                            code
     , t.name                            name
     , t.prefix_tournament               prefix_tournament
     , t.prefix_session                  prefix_session
     , t.url                             url
     , t.notes                           notes
     , t.active_ind                      active_ind
     , ts.id                             tournament_session_id
     , ts.round_num                      round_num
     , ts.session_date                   session_date
     , ts.week                           week
     , ts.open_registration_on           open_registration_on
     , ts.close_registration_on          close_registration_on
     , ts.registration_closed_flag
     , ts.rooms_open_flag
     , ts.rooms_defined_flag
     , ts.rooms_defined_by
     , ts.rooms_defined_on
     , ts.completed_ind                  completed_ind
     , ts.completed_on                   completed_on
     , e.course_id                       easy_course_id
     , e.code                            easy_course_code
     , e.name                            easy_course_name
     , e.course_emoji                    easy_course_emoji
     , e.release_order                   easy_release_order
     , h.course_id                       hard_course_id
     , h.code                            hard_course_code
     , h.name                            hard_course_name
     , h.course_emoji                    hard_course_emoji
     , h.release_order                   hard_release_order
from wmg_tournaments t
   , wmg_tournament_sessions ts
   , courses e
   , courses h
where ts.tournament_id(+) = t.id
--  and tc.tournament_session_id(+) = ts.id
  and ts.id = e.tournament_session_id (+)
  and e.course_no (+) = 1
  and ts.id = h.tournament_session_id (+)
  and h.course_no (+) = 2
;



--------------------------------------------------------
--  DDL for View WMG_TOURNAMENT_SESSION_POINTS_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_TOURNAMENT_SESSION_POINTS_V" ("TOURNAMENT_SESSION_ID", "WEEK", "PLAYER_ID", "PLAYER_NAME", "ACCOUNT", "DISCORD_ID", "COUNTRY_CODE", "RANK_CODE", "EASY_COURSE_ID", "HARD_COURSE_ID", "EASY", "HARD", "TOTAL_SCORE", "EASY_ROUND_ID", "HARD_ROUND_ID", "POS", "PERCENT_RANK", "POINTS", "COMPLETED_IND") AS with rounds as (
    select r.tournament_session_id
         , r.week
         , r.player_id
         , r.easy, r.hard, r.total_score
         , r.easy_course_id, r.hard_course_id
         , r.easy_round_id, r.hard_round_id
         , rank() over (partition by r.week order by r.total_score) pos
         , count(*) over (partition by r.week) player_count
    from (
        select tournament_session_id, week
             , player_id
             , easy, hard, nvl(easy + hard, 99) total_score
             , easy_round_id, hard_round_id
             , easy_course_id, hard_course_id
       from (
          select ts.id tournament_session_id
               , r.week
               , r.player_id
               , r.under_par
               , r.round_id
               , r.course_id
               , tc.course_no
            from wmg_tournament_sessions ts
               , wmg_tournament_courses tc
               , wmg_courses c
               , wmg_rounds_v r
          where ts.id = tc.tournament_session_id
            and tc.course_id = c.id
            and ts.week = r.week
            and r.course_id = c.id
          )
         pivot (
             sum(under_par), any_value(round_id) round_id, any_value(course_id) course_id for course_no in (
              1 EASY, 2 HARD
             )
          )
      ) r
)
, results as (
  select p.tournament_session_id
       , p.week
       , r.player_id, p.account, p.discord_id
       , p.player_name, p.country_code
       , p.rank_code
       , r.easy_course_id, r.hard_course_id
       , r.easy, r.hard
       , r.easy_round_id, r.hard_round_id
       , r.total_score, r.pos
       , player_count
  from rounds r
     , wmg_tournament_player_v p
  where p.tournament_session_id = r.tournament_session_id
   and p.player_id = r.player_id
   and p.active_ind = 'Y'
)
, rank_split as (
  select r.*
       , 0 percent_rank
    from results r
   where r.pos <= 10
  union all 
  /* We need the percent_rank to only consider the players after the top 10 */
  select r.*
       , percent_rank() over (partition by r.tournament_session_id order by r.total_score nulls first ) percent_rank
    from results r
   where r.pos > 10
)
select ts.id tournament_session_id
     , r.week, r.player_id, r.player_name, r.account, r.discord_id, r.country_code
     , r.rank_code
     , r.easy_course_id, r.hard_course_id
     , r.easy, r.hard, r.total_score
     , r.easy_round_id, r.hard_round_id
     , r.pos
     , r.percent_rank
     , decode(r.total_score, 99, 0, wmg_util.score_points(r.pos, r.percent_rank, r.player_count)) points
     -- , wmg_util.score_points(r.pos, r.percent_rank, r.player_count) points
     , ts.completed_ind
 from rank_split r
    , wmg_tournament_sessions ts
where ts.id = r.tournament_session_id
  and ts.week = r.week
order by r.week, r.pos, r.player_name
;


--------------------------------------------------------
--  DDL for View WMG_UNDER50_CLUB_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "WMG_UNDER50_CLUB_V" ("TOURNAMENT_ID", "WEEK", "SESSION_DATE", "PLAYER_ID", "PLAYER_NAME", "EASY_COURSE_CODE", "EASY", "EASY_COURSE_ID", "HARD_COURSE_CODE", "HARD", "HARD_COURSE_ID", "TOTAL_SCORE") AS select s.tournament_id
     , s.week
     , s.session_date
     , p.player_id
     , p.player_name
     , s.easy_course_code, p.easy, p.easy_course_id
     , s.hard_course_code, p.hard, p.hard_course_id
     , p.total_score
from wmg_tournament_sessions_v s
   , wmg_tournament_players tp
   , wmg_tournament_session_points_v p
where s.tournament_session_id = tp.tournament_session_id
  and tp.tournament_session_id = p.tournament_session_id
  and tp.player_id = p.player_id
  and tp.points >= 11
  and p.total_score <= -50
--  and tp.tournament_session_id = 1382
order by p.total_score, s.session_date
;



