---
- # ====== Plugin: Avatar ======================================
  id: 7949650819281189
  identification: 
    name: Avatar
    internal-name: THEME_42$AVATAR
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 1564363394689414260

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <span class="t-Avatar is-placeholder{if ?SHAPE/} #SHAPE!ATTR#{endif/}{if ?SIZE/} #SIZE!ATTR#{endif/}{if ?CSS_CLASSES/} #CSS_CLASSES!ATTR#{endif/}"></span>
      {else/}
        {if ?LINK/}<a href="#LINK!ATTR#" #LINK_ATTR!RAW#{else/}<span{endif/} class="t-Avatar{if ?TYPE/} t-Avatar--{if ?IMAGE/}image{else/}{if ?INITIALS/}initials{else/}icon{endif/}{endif/}{endif/}{if ?SHAPE/} #SHAPE!ATTR#{endif/}{if ?SIZE/} #SIZE!ATTR#{endif/}{if ?ICON/} #ICON!ATTR#{else/} fa fa-user{endif/}{if ?CSS_CLASSES/} #CSS_CLASSES!ATTR#{endif/} u-color" {if !IMAGE/}{if DESCRIPTION/} role="img" aria-label="#DESCRIPTION!ATTR#" title="#DESCRIPTION!ATTR#"{else/} role="presentation"{endif/}{endif/}>{if IMAGE/}<img src="#IMAGE!ATTR#" alt="#DESCRIPTION!ATTR#"{if ?DESCRIPTION/} title="#DESCRIPTION!ATTR#"{endif/} loading="lazy" />{else/}{if ?INITIALS/}#INITIALS!RAW#{endif/}{endif/}{if ?LINK/}</a>{else/}</span>{endif/}
      {endif/}
    translate-templates: false
    default-escape-mode: HTML

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0
    help-text: Display an image, icon, or initials. Available as a partial template to display a single row.

  custom-attributes: 
  - # ====== Custom Attribute: Type ==============================
    id: 10523379601774874
    identification: 
      static-id: TYPE
      attribute: 1
      name: Type
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: IMAGE

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: IMAGE

    entries: 
    - # ====== Entry: Image ========================================
      id: 10523821815774876
      entry: 
        sequence: 10
        display: Image
        return: IMAGE

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 10524424855774877
      entry: 
        sequence: 20
        display: Initials
        return: INITIALS

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 10525094100774879
      entry: 
        sequence: 30
        display: Icon
        return: ICON

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 10525681022774880
    identification: 
      static-id: IMAGE
      attribute: 2
      name: Image
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 10523379601774874
      depending-on-condition-type: equal to
      expression: IMAGE
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

    examples: 
      demo-value: '#APEX_FILES#apex_ui/img/favicons/app-artwork-catalog.png'

  - # ====== Custom Attribute: Description =======================
    id: 10526151550774882
    identification: 
      static-id: DESCRIPTION
      attribute: 3
      name: Description
      scope: Component

    layout: 
      sequence: 55

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    help: 
      help-text: Enter a short description of the image/icon or select a source column from the quick pick options. This will be used as title & alt text for the avatar image/icon.

  - # ====== Custom Attribute: Initials ==========================
    id: 10526680545774883
    identification: 
      static-id: INITIALS
      attribute: 4
      name: Initials
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Type # 10523379601774874
      depending-on-condition-type: equal to
      expression: INITIALS
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 10527198418774885
    identification: 
      static-id: ICON
      attribute: 5
      name: Icon
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 10523379601774874
      depending-on-condition-type: equal to
      expression: ICON
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 10527697794774886
    identification: 
      static-id: SHAPE
      attribute: 6
      name: Shape
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10528170130774887
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10528715528774889
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 10529352426774890
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 10529925611774891
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Size ==============================
    id: 10530574753774893
    identification: 
      static-id: SIZE
      attribute: 7
      name: Size
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Set the size of the avatar. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Extra Extra Small ============================
      id: 10531015647774896
      entry: 
        sequence: 10
        display: Extra Extra Small
        return: t-Avatar--xxs

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Small ==================================
      id: 10531691073774898
      entry: 
        sequence: 20
        display: Extra Small
        return: t-Avatar--xs

      advanced: 
        quick-pick: false

    - # ====== Entry: Small ========================================
      id: 10532293523774899
      entry: 
        sequence: 30
        display: Small
        return: t-Avatar--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 10532804484774901
      entry: 
        sequence: 40
        display: Medium
        return: t-Avatar--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 10533467957774902
      entry: 
        sequence: 50
        display: Large
        return: t-Avatar--lg

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Large ==================================
      id: 10534091291774903
      entry: 
        sequence: 60
        display: Extra Large
        return: t-Avatar--xl

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Extra Large ============================
      id: 10534623664774904
      entry: 
        sequence: 70
        display: Extra Extra Large
        return: t-Avatar--xxl

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: CSS Classes =======================
    id: 10535287942774906
    identification: 
      static-id: CSS_CLASSES
      attribute: 8
      name: CSS Classes
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Text
      common: false
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    help: 
      help-text: Enter classes to add to this component. You may add multiple classes by separating them with a space.

  action-positions: 
  - # ====== Action Position: Link ===============================
    id: 1808000672839394941
    identification: 
      name: Link
      static-id: LINK
      sequence: 10

    advanced: 
      quick-pick: true

    settings: 
      type: Link

- # ====== Plugin: Badge =======================================
  id: 7963974538281237
  identification: 
    name: Badge
    internal-name: THEME_42$BADGE
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 1564377533892414278

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <span class="t-Badge is-placeholder{if ?SIZE/} #SIZE!ATTR#{endif/}{if ?SHAPE/} #SHAPE!ATTR#{endif/}"></span>
      {else/}
        {if ?LINK/}<a href="#LINK!ATTR#" #LINK_ATTR!RAW#{else/}<span{endif/} class="t-Badge {if ?STATE/}t-Badge--#STATE!ATTR#{endif/} {if ?STYLE/}#STYLE!ATTR#{endif/} {if ?SIZE/}#SIZE!ATTR#{endif/} {if ?SHAPE/}#SHAPE!ATTR#{endif/}" role="status" aria-label="#LABEL!ATTR# #VALUE!ATTR#" title="#LABEL!ATTR# #VALUE!ATTR#">
          {if ?ICON/}<span class="t-Badge-icon #ICON!ATTR#" aria-hidden="true"></span>{endif/}
          {if LABEL_DISPLAY/}<span class="t-Badge-label">#LABEL!RAW#</span>{endif/}
          <span class="t-Badge-value">#VALUE!RAW#</span>
        {if ?LINK/}</a>{else/}</span>{endif/}
      {endif/}
      
    report-body: |
      {if !APEX$HAS_MESSAGE/}
        <ul class="t-Badges #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>
      {endif/}
    report-row: |
      <li class="t-Badges-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>
      
    translate-templates: true
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 1

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0
    help-text: Display content within a badge. Available for multiple report rows or a single row.

  custom-attributes: 
  - # ====== Custom Attribute: Label =============================
    id: 10537765433774915
    identification: 
      static-id: LABEL
      attribute: 1
      name: Label
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: Strip HTML

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 10538298036774917
    identification: 
      static-id: VALUE
      attribute: 2
      name: Value
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: Strip HTML

    help: 
      help-text: Select a source column for the badge value.

  - # ====== Custom Attribute: State =============================
    id: 10538764460774918
    identification: 
      static-id: STATE
      attribute: 3
      name: State
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

  - # ====== Custom Attribute: Icon ==============================
    id: 10539259436774920
    identification: 
      static-id: ICON
      attribute: 4
      name: Icon
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

  - # ====== Custom Attribute: Display Label =====================
    id: 10539754258774921
    identification: 
      static-id: LABEL_DISPLAY
      attribute: 5
      name: Display Label
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 10540252294774923
    identification: 
      static-id: STYLE
      attribute: 6
      name: Style
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 10540769273774925
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 10541342206774927
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 10541906541774928
    identification: 
      static-id: SHAPE
      attribute: 7
      name: Shape
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10542425603774929
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10543022035774931
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 10543623448774932
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Size ==============================
    id: 10544258850774933
    identification: 
      static-id: SIZE
      attribute: 8
      name: Size
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Set the size of the badge. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Small ========================================
      id: 10544705630774934
      entry: 
        sequence: 10
        display: Small
        return: t-Badge--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 10545386117774936
      entry: 
        sequence: 20
        display: Medium
        return: t-Badge--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 10545962336774937
      entry: 
        sequence: 30
        display: Large
        return: t-Badge--lg

      advanced: 
        quick-pick: false

  action-positions: 
  - # ====== Action Position: Link ===============================
    id: 1522019700573877103
    identification: 
      name: Link
      static-id: LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

- # ====== Plugin: Comments ====================================
  id: 7973241390281260
  identification: 
    name: Comments
    internal-name: THEME_42$COMMENTS
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      referenced-id: 1564386865908414285

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div class="t-Comments-item{if ?COMMENT_CLASS/} #COMMENT_CLASS!ATTR#{endif/}">
          {if DISPLAY_AVATAR%assigned/}
            <div class="t-Comments-icon">
              {with/}
                SIZE:=t-Avatar--xs
                SHAPE:=#AVATAR_SHAPE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-Comments-body">
            <div class="t-Comments-info">
              <span class="t-Comments-user is-placeholder"></span>
            </div>
            <div class="t-Comments-comment is-placeholder"></div>
          </div>
        </div>
      {else/}
        <div class="t-Comments-item{if ?COMMENT_CLASS/} #COMMENT_CLASS!ATTR#{endif/}">
          {if DISPLAY_AVATAR/}
            <div class="t-Comments-icon">
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                DESCRIPTION:=#AVATAR_DESCRIPTION#
                ICON:=#AVATAR_ICON#
                INITIALS:=#AVATAR_INITIALS#
                SIZE:=t-Avatar--xs
                SHAPE:=#AVATAR_SHAPE#
                CSS_CLASSES:=u-color
                LINK:=#AVATAR_LINK#
                LINK_ATTR:=#AVATAR_LINK_ATTR!RAW#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-Comments-body">
            <div class="t-Comments-info">
              <span class="t-Comments-user">{if USER_NAME_LINK/}<a href="#USER_NAME_LINK!ATTR#" #USER_NAME_LINK_ATTR!RAW#>{endif/}#USER_NAME!RAW#{if USER_NAME_LINK/}</a>{endif/}</span>
              {if COMMENT_DATE/}<span class="t-Comments-date">#COMMENT_DATE!RAW#</span>{endif/}
              {if ACTIONS/}<span class="t-Comments-actions">#ACTIONS!RAW#</span>{endif/}
            </div>
            <div class="t-Comments-comment">
              #COMMENT_TEXT!RAW#
              {if ATTRIBUTES/}<div class="t-Comments-attributes">#ATTRIBUTES!RAW#</div>{endif/}
            </div>
          </div>
        </div>
      {endif/}
    report-body: |
      <ul class="t-Comments{if ?STYLE/} #STYLE!ATTR#{endif/} {if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>
      
    report-row: |
      <li class="t-Comments-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>
      
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display user comments and status updates. Supports avatars. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Avatar =============================
    id: 1810436972177806673
    identification: 
      name: Avatar
      sequence: 20

  custom-attributes: 
  - # ====== Custom Attribute: Comment Text ======================
    id: 10552015035774960
    identification: 
      static-id: COMMENT_TEXT
      attribute: 1
      name: Comment Text
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column containing text for user comments.

    examples: 
      demo-value: Praesent vel felis rutrum erat elementum viverra sit amet non odio. Cras vel auctor eros, in malesuada dolor. Nulla tellus magna, ornare consectetur purus id, volutpat egestas felis. Proin lobortis risus massa, nec faucibus arcu malesuada a. Nunc sed gravida urna. Fusce at ligula sed erat consequat pharetra.

  - # ====== Custom Attribute: User Name =========================
    id: 10552584227774961
    identification: 
      static-id: USER_NAME
      attribute: 2
      name: User Name
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be displayed as the user name associated with a comment.

    examples: 
      demo-value: Joel

  - # ====== Custom Attribute: Date ==============================
    id: 10553012680774963
    identification: 
      static-id: COMMENT_DATE
      attribute: 3
      name: Date
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      - Date
      escape-mode: HTML

    help: 
      help-text: Select a source column containing a date, date range, or time.

    examples: 
      demo-value: 5 minutes ago

  - # ====== Custom Attribute: Attributes ========================
    id: 10553517435774964
    identification: 
      static-id: ATTRIBUTES
      attribute: 4
      name: Attributes
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML

    help: 
      help-text: Enter some text and/or column substitution strings to be used as the comment attributes.

  - # ====== Custom Attribute: Type ==============================
    id: 10554022832774966
    identification: 
      static-id: AVATAR_TYPE
      attribute: 5
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 1810436972177806673
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 10561261922774983
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: initials

    entries: 
    - # ====== Entry: Image ========================================
      id: 10554533360774967
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 10555180672774968
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 10555735153774970
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 10556351037774971
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 6
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 1810436972177806673
      sequence: 60

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 10554022832774966
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Description =======================
    id: 10556839993774972
    identification: 
      static-id: AVATAR_DESCRIPTION
      attribute: 7
      name: Description
      scope: Component

    layout: 
      attribute-group: Avatar # 1810436972177806673
      sequence: 95

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Avatar # 10561261922774983
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image/icon or select a source column from the quick pick options. This will be used as title & alt text for the avatar image/icon.

  - # ====== Custom Attribute: Initials ==========================
    id: 10557335615774973
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 8
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 1810436972177806673
      sequence: 80

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 10554022832774966
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

    examples: 
      demo-value: JK

  - # ====== Custom Attribute: Icon ==============================
    id: 10557802716774975
    identification: 
      static-id: AVATAR_ICON
      attribute: 9
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 1810436972177806673
      sequence: 90

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 10554022832774966
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 10558352580774976
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 10
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 1810436972177806673
      sequence: 100

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--rounded

    condition: 
      depending-on-custom-attribute: Display Avatar # 10561261922774983
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10558839013774977
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10559409870774979
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 10560078793774980
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 10560627346774981
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 10561261922774983
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 11
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

    examples: 
      demo-value: Y

  - # ====== Custom Attribute: Comment Class =====================
    id: 10561712743774984
    identification: 
      static-id: COMMENT_CLASS
      attribute: 14
      name: Comment Class
      scope: Component

    layout: 
      sequence: 45

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    help: 
      help-text: Allows you to pass a class onto individual comments. Example using is-active will highlight the specific comment with a different shade.

  - # ====== Custom Attribute: Style =============================
    id: 10562211279774986
    identification: 
      static-id: STYLE
      attribute: 12
      name: Style
      scope: Report

    layout: 
      sequence: 120

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Comments--basic

    help: 
      help-text: Set the style of the comments.

    examples: 
      demo-value: t-Comments--chat

    entries: 
    - # ====== Entry: Basic ========================================
      id: 10562795896774987
      entry: 
        sequence: 10
        display: Basic
        return: t-Comments--basic

      advanced: 
        quick-pick: false

    - # ====== Entry: Chat (Speech Bubbles) ========================
      id: 10563336705774989
      entry: 
        sequence: 20
        display: Chat (Speech Bubbles)
        return: t-Comments--chat

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 10563905824774990
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 13
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 130

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

  action-positions: 
  - # ====== Action Position: Actions ============================
    id: 1807990966570407022
    identification: 
      name: Actions
      static-id: ACTIONS
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Template

  - # ====== Action Position: Avatar Link ========================
    id: 1808046590240388901
    identification: 
      name: Avatar Link
      static-id: AVATAR_LINK
      sequence: 20

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: User Name Link =====================
    id: 1808198807953259672
    identification: 
      name: User Name Link
      static-id: USER_NAME_LINK
      sequence: 30

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  action-templates: 
  - # ====== Action Template: Link ===============================
    id: 1807991558075414479
    identification: 
      name: Link
      type: Button

    template: 
      action-template: '{if !IS_DISABLED/}<a {if CSS_CLASSES/}class="#CSS_CLASSES#"{endif/} href="#LINK_URL#" #LINK_ATTR!RAW#>#LABEL!RAW#</a>{endif/}'

    advanced: 
      translatable: false

- # ====== Plugin: Button ======================================
  id: 7990060354281296
  identification: 
    name: Button
    internal-name: THEME_42$BUTTON
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: false

  subscription: 
    master: 
      referenced-id: 1568467215199837453

    subscribe-component-settings: true

  templates: 
    partial: |
      {if MENU_ID/}<button type="button" data-menu="#MENU_ID!ATTR#"{else/}<a href="#LINK_URL!ATTR#" #LINK_ATTR!RAW#{endif/} class="t-Button{if IS_HOT/} t-Button--hot{endif/}{if IS_ICON_ONLY/} t-Button--noLabel t-Button--icon{else/}{if ICON_CLASSES/} t-Button--iconLeft{endif/}{endif/} #CSS_CLASSES!ATTR#" title="#LABEL!ATTR#" {if IS_DISABLED/} disabled{endif/}>
        {if ?ICON_CLASSES/}<span class="t-Icon t-Icon--left #ICON_CLASSES!ATTR#" aria-hidden="true"></span>{endif/}<span class="t-Button-label">#LABEL!RAW#</span>
      {if MENU_ID/}</button>{else/}</a>{endif/}
      
    translate-templates: false
    default-escape-mode: HTML

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  custom-attributes: 
  - # ====== Custom Attribute: Label =============================
    id: 10547303811774942
    identification: 
      static-id: LABEL
      attribute: 1
      name: Label
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: Raw

  - # ====== Custom Attribute: Link URL ==========================
    id: 10547847796774944
    identification: 
      static-id: LINK_URL
      attribute: 2
      name: Link URL
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Link to Target Page/URL
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

  - # ====== Custom Attribute: Link Attribute ====================
    id: 10548346131774945
    identification: 
      static-id: LINK_ATTR
      attribute: 3
      name: Link Attribute
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: Raw

  - # ====== Custom Attribute: Icon Classes ======================
    id: 10548840416774946
    identification: 
      static-id: ICON_CLASSES
      attribute: 4
      name: Icon Classes
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

  - # ====== Custom Attribute: CSS Classes =======================
    id: 10549347052774947
    identification: 
      static-id: CSS_CLASSES
      attribute: 5
      name: CSS Classes
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

  - # ====== Custom Attribute: Is Disabled =======================
    id: 10549800694774948
    identification: 
      static-id: IS_DISABLED
      attribute: 6
      name: Is Disabled
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: N

  - # ====== Custom Attribute: Is Hot ============================
    id: 10550373916774950
    identification: 
      static-id: IS_HOT
      attribute: 7
      name: Is Hot
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: N

  - # ====== Custom Attribute: Is Icon Only ======================
    id: 10550848890774951
    identification: 
      static-id: IS_ICON_ONLY
      attribute: 8
      name: Is Icon Only
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML

    default: 
      value: N

- # ====== Plugin: Timeline ====================================
  id: 7994553990281308
  identification: 
    name: Timeline
    internal-name: THEME_42$TIMELINE
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      referenced-id: 1601817836543095628

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      <div{if ?CSS_CLASSES/} class="#CSS_CLASSES#"{endif/}{if ?ATTRIBUTES/}#ATTRIBUTES!RAW#{endif/}>
        <div class="t-Timeline-wrap">
          <div class="t-Timeline-user">
            {if DISPLAY_AVATAR/}
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                DESCRIPTION:=#AVATAR_DESCRIPTION#
                INITIALS:=#AVATAR_INITIALS#
                ICON:=#AVATAR_ICON#
                SHAPE:=#AVATAR_SHAPE#
                SIZE:=
                LINK:=#AVATAR_LINK#
                LINK_ATTR:=#AVATAR_LINK_ATTR!RAW#
              {apply THEME$AVATAR/}
            {endif/}
            <div class="t-Timeline-userinfo">
              <span class="t-Timeline-username">{if ?USER_NAME_LINK/}<a href="#USER_NAME_LINK!ATTR#" #USER_NAME_LINK_ATTR!RAW#>{endif/}#USER_NAME!RAW#{if ?USER_NAME_LINK/}</a>{endif/}</span>
              <span class="t-Timeline-date">#DATE!RAW#</span>
            </div>
          </div>
          <div class="t-Timeline-content">
            {if DISPLAY_BADGE/}
              <div class="t-Timeline-typeWrap">
                {with/}
                  LABEL_DISPLAY:=#BADGE_LABEL_DISPLAY#
                  LABEL:=#BADGE_LABEL#
                  VALUE:=#BADGE_VALUE#
                  ICON:=#BADGE_ICON#
                  STATE:=#BADGE_STATE#
                {apply THEME$BADGE/}
              </div>
            {endif/}
            <div class="t-Timeline-body">
              <h3 class="t-Timeline-title">{if ?TITLE_LINK/}<a href="#TITLE_LINK!ATTR#" #TITLE_LINK_ATTR!RAW#>{endif/}#TITLE!RAW#{if ?TITLE_LINK/}</a>{endif/}</h3>
              {if ?DESCRIPTION/}<p class="t-Timeline-desc">#DESCRIPTION!RAW#</p>{endif/}
            </div>
          </div>
        </div>
      </div>
    report-body: |
      <ul class="t-Timeline{if ?STYLE/} #STYLE#{endif/}{if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>
      
    report-row: '<li class="t-Timeline-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display a series of events. Supports avatars and badges. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Badge ==============================
    id: 2157723099928882168
    identification: 
      name: Badge
      sequence: 20

  - # ====== Attribute Group: Avatar =============================
    id: 2157723654940882169
    identification: 
      name: Avatar
      sequence: 10

  custom-attributes: 
  - # ====== Custom Attribute: User Name =========================
    id: 10641293902775221
    identification: 
      static-id: USER_NAME
      attribute: 1
      name: User Name
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be displayed as the user name associated with a timeline event.

    examples: 
      demo-value: User

  - # ====== Custom Attribute: Date ==============================
    id: 10641799632775222
    identification: 
      static-id: DATE
      attribute: 2
      name: Date
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML

    help: 
      help-text: Select a source column containing a date, date range, or time.

    examples: 
      demo-value: 1 hour ago

  - # ====== Custom Attribute: Title =============================
    id: 10642255813775224
    identification: 
      static-id: TITLE
      attribute: 3
      name: Title
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used as the title.

    examples: 
      demo-value: Lorem ipsum dolor sit amet

  - # ====== Custom Attribute: Description =======================
    id: 10642710864775225
    identification: 
      static-id: DESCRIPTION
      attribute: 4
      name: Description
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used for the row description.

    examples: 
      demo-value: Nunc sit amet nunc quis magna ornare suscipit. Etiam aliquet maximus sapien, at sagittis sem gravida nec.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 10643258339775226
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 5
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

    examples: 
      demo-value: Y

  - # ====== Custom Attribute: Display Badge =====================
    id: 10643708574775228
    identification: 
      static-id: DISPLAY_BADGE
      attribute: 6
      name: Display Badge
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge for each row. When set to Yes, a badge will be displayed in each row. When set to No, no badge will be displayed.

    examples: 
      demo-value: Y

  - # ====== Custom Attribute: Type ==============================
    id: 10644251361775229
    identification: 
      static-id: AVATAR_TYPE
      attribute: 7
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 2157723654940882169
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 10643258339775226
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: icon

    entries: 
    - # ====== Entry: Image ========================================
      id: 10644715873775231
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 10645300723775232
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 10645942030775234
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 10646555791775235
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 8
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 2157723654940882169
      sequence: 80

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 10644251361775229
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Description =======================
    id: 10647070877775237
    identification: 
      static-id: AVATAR_DESCRIPTION
      attribute: 9
      name: Description
      scope: Component

    layout: 
      attribute-group: Avatar # 2157723654940882169
      sequence: 115

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Avatar # 10643258339775226
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image/icon or select a source column from the quick pick options. This will be used as title & alt text for the avatar image/icon.

  - # ====== Custom Attribute: Initials ==========================
    id: 10647549792775238
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 10
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 2157723654940882169
      sequence: 100

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 10644251361775229
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 10648052905775239
    identification: 
      static-id: AVATAR_ICON
      attribute: 11
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 2157723654940882169
      sequence: 110

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 10644251361775229
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 10648539730775241
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 12
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 2157723654940882169
      sequence: 120

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--circle

    condition: 
      depending-on-custom-attribute: Display Avatar # 10643258339775226
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10649057914775242
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10649612984775243
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 10650223755775245
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 10650814797775247
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Label =============================
    id: 10651495514775248
    identification: 
      static-id: BADGE_LABEL
      attribute: 13
      name: Label
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 130

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 10651930249775249
    identification: 
      static-id: BADGE_VALUE
      attribute: 14
      name: Value
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 140

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select a source column for the badge value.

    examples: 
      demo-value: Closed

  - # ====== Custom Attribute: State =============================
    id: 10652446735775250
    identification: 
      static-id: BADGE_STATE
      attribute: 15
      name: State
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 150

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

    examples: 
      demo-value: is-removed

  - # ====== Custom Attribute: Icon ==============================
    id: 10652968354775252
    identification: 
      static-id: BADGE_ICON
      attribute: 16
      name: Icon
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 160

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

    examples: 
      demo-value: fa-check-circle-o

  - # ====== Custom Attribute: Display Label =====================
    id: 10653420724775253
    identification: 
      static-id: BADGE_LABEL_DISPLAY
      attribute: 17
      name: Display Label
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 170

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 10653909237775254
    identification: 
      static-id: BADGE_STYLE
      attribute: 18
      name: Style
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 180

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 10654435566775256
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 10655006587775257
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 10655562566775259
    identification: 
      static-id: BADGE_SHAPE
      attribute: 19
      name: Shape
      scope: Component

    layout: 
      attribute-group: Badge # 2157723099928882168
      sequence: 190

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 10643708574775228
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10656029365775260
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10656642033775261
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 10657219899775262
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Style =============================
    id: 10657865593775264
    identification: 
      static-id: STYLE
      attribute: 20
      name: Style
      scope: Report

    layout: 
      sequence: 200

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Set the style of timeline items.

    entries: 
    - # ====== Entry: Compact ======================================
      id: 10658376525775265
      entry: 
        sequence: 10
        display: Compact
        return: t-Timeline--compact

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 10658997954775266
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 21
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 210

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

    examples: 
      demo-value: Y

  action-positions: 
  - # ====== Action Position: Title Link =========================
    id: 1802847650147596846
    identification: 
      name: Title Link
      static-id: TITLE_LINK
      sequence: 25

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: User Name Link =====================
    id: 1917259013135860447
    identification: 
      name: User Name Link
      static-id: USER_NAME_LINK
      sequence: 15

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Avatar Link ========================
    id: 2036290260110164888
    identification: 
      name: Avatar Link
      static-id: AVATAR_LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

- # ====== Plugin: Content Row =================================
  id: 8020465444281363
  identification: 
    name: Content Row
    internal-name: THEME_42$CONTENT_ROW
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      referenced-id: 1568468153344837456

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div class="t-ContentRow-wrap" aria-hidden="true">
          {if ?SELECTION%assigned/}<div class="t-ContentRow-selection is-placeholder"></div>{endif/}
          {if DISPLAY_BADGE/}
            <div class="t-ContentRow-badge #BADGE_COL_WIDTH!ATTR# #BADGE_POS!ATTR# #BADGE_ALIGNMENT!ATTR#">
              {with/}
                LABEL:=
                VALUE:=
                SIZE:=#BADGE_SIZE#
                SHAPE:=#BADGE_SHAPE#
              {apply THEME$BADGE/}
            </div>
          {endif/}
          {if DISPLAY_AVATAR/}
            <div class="t-ContentRow-avatar">
              {with/}
                SHAPE:=#AVATAR_SHAPE#
                SIZE:=#AVATAR_SIZE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-ContentRow-body">
            <div class="t-ContentRow-content">
              {if ?OVERLINE%assigned/}<div class="t-ContentRow-overline is-placeholder"></div>{endif/}
              {if ?TITLE%assigned/}<div class="t-ContentRow-title is-placeholder"></div>{endif/}
              {if ?DESCRIPTION%assigned/}<div class="t-ContentRow-description is-placeholder"></div>{endif/}
            </div>
            {if ?MISC%assigned/}<div class="t-ContentRow-misc is-placeholder"></div>{endif/}
            {if ?PRIMARY_ACTIONS%assigned/}<div class="t-ContentRow-actions is-placeholder"></div>{endif/}
          </div>
        </div>
      {else/}
        {if ?FULL_ROW_LINK/}<a class="t-ContentRow-fullLink" href="#FULL_ROW_LINK!ATTR#" #FULL_ROW_LINK_ATTR!RAW#></a>{endif/}
        <div class="t-ContentRow-wrap">
          {if ?SELECTION%assigned/}<div class="t-ContentRow-selection">#SELECTION!RAW#</div>{endif/}
          {if DISPLAY_BADGE/}
            <div class="t-ContentRow-badge #BADGE_COL_WIDTH!ATTR# #BADGE_POS!ATTR# #BADGE_ALIGNMENT!ATTR#">
              {with/}
                LABEL_DISPLAY:=#BADGE_LABEL_DISPLAY#
                LABEL:=#BADGE_LABEL#
                VALUE:=#BADGE_VALUE#
                ICON:=#BADGE_ICON#
                STATE:=#BADGE_STATE#
                SIZE:=#BADGE_SIZE#
                STYLE:=#BADGE_STYLE#
                SHAPE:=#BADGE_SHAPE#
                LINK:=#BADGE_LINK#
                LINK_ATTR:=#BADGE_LINK_ATTR!RAW#
              {apply THEME$BADGE/}
            </div>
          {endif/}
          {if DISPLAY_AVATAR/}
            <div class="t-ContentRow-avatar" aria-hidden="true">
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                DESCRIPTION:=#AVATAR_DESCRIPTION#
                INITIALS:=#AVATAR_INITIALS#
                ICON:=#AVATAR_ICON#
                SHAPE:=#AVATAR_SHAPE#
                SIZE:=#AVATAR_SIZE#
                LINK:=#AVATAR_LINK#
                LINK_ATTR:=#AVATAR_LINK_ATTR!RAW#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-ContentRow-body">
            <div class="t-ContentRow-content">
              {if ?OVERLINE/}<div class="t-ContentRow-overline">#OVERLINE!RAW#</div>{endif/}
              {if ?TITLE/}<h3 class="t-ContentRow-title">{if ?TITLE_LINK/}<a href="#TITLE_LINK!ATTR#" #TITLE_LINK_ATTR!RAW#>{endif/}#TITLE!RAW#{if ?TITLE_LINK/}</a>{endif/}</h3>{endif/}
              {if ?DESCRIPTION/}<div class="t-ContentRow-description">#DESCRIPTION!RAW#</div>{endif/}
            </div>
            {if ?MISC%assigned/}<div class="t-ContentRow-misc">#MISC!RAW#</div>{endif/}
            {if ?PRIMARY_ACTIONS/}<div class="t-ContentRow-actions">#PRIMARY_ACTIONS#</div>{endif/}
          </div>
        </div>
      {endif/}
      
    report-body: '<ul class="t-ContentRow{if ?STYLE/} #STYLE!ATTR#{endif/}{if REMOVE_PADDING/} t-ContentRow--removePadding{endif/}{if HIDE_BORDERS/} t-ContentRow--hideBorders{endif/}{if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>'
    report-row: '<li class="t-ContentRow-item{if ?ITEM_CLASSES/} #ITEM_CLASSES#{endif/}" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display content in a formatted row with a title, description, and more. Supports avatars and badges. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Appearance =========================
    id: 1680913765865573192
    identification: 
      name: Appearance
      sequence: 30

  - # ====== Attribute Group: Badge ==============================
    id: 1937805829595846705
    identification: 
      name: Badge
      sequence: 20

  - # ====== Attribute Group: Avatar =============================
    id: 1937806384607846706
    identification: 
      name: Avatar
      sequence: 10

  custom-attributes: 
  - # ====== Custom Attribute: Overline ==========================
    id: 10570009178775016
    identification: 
      static-id: OVERLINE
      attribute: 1
      name: Overline
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: HTML
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter some text and/or column substitution strings to display at the top of each row above the title and description.

    examples: 
      demo-value: Category

  - # ====== Custom Attribute: Title =============================
    id: 10570543338775017
    identification: 
      static-id: TITLE
      attribute: 2
      name: Title
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: HTML
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML

    help: 
      help-text: Enter some text and/or column substitution strings to be used as the title in each row.

    examples: 
      demo-value: Lorem ipsum dolor sit amet

  - # ====== Custom Attribute: Description =======================
    id: 10571037299775019
    identification: 
      static-id: DESCRIPTION
      attribute: 3
      name: Description
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: HTML
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter some text and/or column substitution strings to be used as the description in each row.

    examples: 
      demo-value: Nunc sit amet nunc quis magna ornare suscipit. Etiam aliquet maximus sapien, at sagittis sem gravida nec.

  - # ====== Custom Attribute: Miscellaneous =====================
    id: 10571565905775020
    identification: 
      static-id: MISC
      attribute: 4
      name: Miscellaneous
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: HTML
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: Raw

    help: 
      help-text: Enter miscellaneous content such as additional text and/or column substitution strings to display in each row.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 10572014006775021
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 5
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

  - # ====== Custom Attribute: Display Badge =====================
    id: 10572549901775022
    identification: 
      static-id: DISPLAY_BADGE
      attribute: 6
      name: Display Badge
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge for each row. When set to Yes, a badge will be displayed in each row. When set to No, no badge will be displayed.

  - # ====== Custom Attribute: Type ==============================
    id: 10573030415775023
    identification: 
      static-id: AVATAR_TYPE
      attribute: 7
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 10572014006775021
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: icon

    entries: 
    - # ====== Entry: Image ========================================
      id: 10573505197775025
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 10574174375775026
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 10574733364775028
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 10575341198775029
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 8
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 80

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 10573030415775023
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Description =======================
    id: 10575830098775031
    identification: 
      static-id: AVATAR_DESCRIPTION
      attribute: 9
      name: Description
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 115

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Avatar # 10572014006775021
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image or select a source column from the quick pick options. This will be used as alt text for the avatar image.

  - # ====== Custom Attribute: Initials ==========================
    id: 10576311796775032
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 10
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 100

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 10573030415775023
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 10576824254775034
    identification: 
      static-id: AVATAR_ICON
      attribute: 11
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 110

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 10573030415775023
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 10577390631775035
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 12
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 120

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--rounded

    condition: 
      depending-on-custom-attribute: Display Avatar # 10572014006775021
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10577840877775036
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10578419208775037
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 10579072375775038
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 10579629620775040
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Label =============================
    id: 10580206835775041
    identification: 
      static-id: BADGE_LABEL
      attribute: 13
      name: Label
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 130

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 10580754094775042
    identification: 
      static-id: BADGE_VALUE
      attribute: 14
      name: Value
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 140

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select a source column for the badge value.

  - # ====== Custom Attribute: State =============================
    id: 10581209007775043
    identification: 
      static-id: BADGE_STATE
      attribute: 15
      name: State
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 150

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

  - # ====== Custom Attribute: Icon ==============================
    id: 10581719238775045
    identification: 
      static-id: BADGE_ICON
      attribute: 16
      name: Icon
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 160

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

  - # ====== Custom Attribute: Display Label =====================
    id: 10582222241775047
    identification: 
      static-id: BADGE_LABEL_DISPLAY
      attribute: 17
      name: Display Label
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 170

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 10582746968775048
    identification: 
      static-id: BADGE_STYLE
      attribute: 18
      name: Style
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 180

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 10583263901775049
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 10583845878775050
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 10584434919775052
    identification: 
      static-id: BADGE_SHAPE
      attribute: 19
      name: Shape
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 190

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10584994168775053
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10585567396775054
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 10586139414775055
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

    - # ====== Entry: No Shape =====================================
      id: 10586747132775057
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Size ==============================
    id: 10587237571775058
    identification: 
      static-id: AVATAR_SIZE
      attribute: 20
      name: Size
      scope: Component

    layout: 
      attribute-group: Avatar # 1937806384607846706
      sequence: 200

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Avatar # 10572014006775021
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Set the size of the avatar. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Extra Extra Small ============================
      id: 10587760461775059
      entry: 
        sequence: 10
        display: Extra Extra Small
        return: t-Avatar--xxs

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Small ==================================
      id: 10588341465775061
      entry: 
        sequence: 20
        display: Extra Small
        return: t-Avatar--xs

      advanced: 
        quick-pick: false

    - # ====== Entry: Small ========================================
      id: 10588978838775062
      entry: 
        sequence: 30
        display: Small
        return: t-Avatar--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 10589519912775063
      entry: 
        sequence: 40
        display: Medium
        return: t-Avatar--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 10590187560775065
      entry: 
        sequence: 50
        display: Large
        return: t-Avatar--lg

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Large ==================================
      id: 10590792316775066
      entry: 
        sequence: 60
        display: Extra Large
        return: t-Avatar--xl

      advanced: 
        quick-pick: false

    - # ====== Entry: Extra Extra Large ============================
      id: 10591310266775067
      entry: 
        sequence: 70
        display: Extra Extra Large
        return: t-Avatar--xxl

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Size ==============================
    id: 10591924282775069
    identification: 
      static-id: BADGE_SIZE
      attribute: 21
      name: Size
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 210

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Set the size of the badge. The default inherits the sizing set by the containing template.

    entries: 
    - # ====== Entry: Small ========================================
      id: 10592466743775071
      entry: 
        sequence: 10
        display: Small
        return: t-Badge--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 10593051662775072
      entry: 
        sequence: 20
        display: Medium
        return: t-Badge--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 10593620635775073
      entry: 
        sequence: 30
        display: Large
        return: t-Badge--lg

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Column Width ======================
    id: 10594226696775075
    identification: 
      static-id: BADGE_COL_WIDTH
      attribute: 22
      name: Column Width
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 220

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    default: 
      value: t-ContentRow-badge--md

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Set the width of the content row columns. Default width is medium.

    entries: 
    - # ====== Entry: Small ========================================
      id: 10594785487775076
      entry: 
        sequence: 10
        display: Small
        return: t-ContentRow-badge--sm

      advanced: 
        quick-pick: false

    - # ====== Entry: Medium =======================================
      id: 10595353977775078
      entry: 
        sequence: 20
        display: Medium
        return: t-ContentRow-badge--md

      advanced: 
        quick-pick: false

    - # ====== Entry: Large ========================================
      id: 10595994197775079
      entry: 
        sequence: 30
        display: Large
        return: t-ContentRow-badge--lg

      advanced: 
        quick-pick: false

    - # ====== Entry: Auto =========================================
      id: 10596537357775081
      entry: 
        sequence: 40
        display: Auto
        return: t-ContentRow-badge--auto

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Position ==========================
    id: 10597196191775082
    identification: 
      static-id: BADGE_POS
      attribute: 24
      name: Position
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 240

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Start
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Positions the Badge column to either the "Start" or "End" of the row.

    entries: 
    - # ====== Entry: End ==========================================
      id: 10597626229775083
      entry: 
        sequence: 10
        display: End
        return: t-ContentRow-badge--posEnd

      advanced: 
        quick-pick: false

      help: 
        help-text: Positions the Badge column to the "end" of the row.

  - # ====== Custom Attribute: Alignment =========================
    id: 10598253132775084
    identification: 
      static-id: BADGE_ALIGNMENT
      attribute: 25
      name: Alignment
      scope: Component

    layout: 
      attribute-group: Badge # 1937805829595846705
      sequence: 250

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Start
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10572549901775022
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Changes the alignment of the badge within its column.

    entries: 
    - # ====== Entry: Center =======================================
      id: 10598703155775086
      entry: 
        sequence: 10
        display: Center
        return: t-ContentRow-badge--alignCenter

      advanced: 
        quick-pick: false

      help: 
        help-text: Aligns the badge to the "center" of its column.

    - # ====== Entry: End ==========================================
      id: 10599316000775087
      entry: 
        sequence: 20
        display: End
        return: t-ContentRow-badge--alignEnd

      advanced: 
        quick-pick: false

      help: 
        help-text: Aligns the badge to the "end" of its column.

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 10599917483775088
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 23
      name: Apply Theme Colors
      scope: Report

    layout: 
      attribute-group: Appearance # 1680913765865573192
      sequence: 230

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

  - # ====== Custom Attribute: Style =============================
    id: 10600480473775090
    identification: 
      static-id: STYLE
      attribute: 27
      name: Style
      scope: Report

    layout: 
      attribute-group: Appearance # 1680913765865573192
      sequence: 270

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    entries: 
    - # ====== Entry: Compact ======================================
      id: 10600917240775091
      entry: 
        sequence: 10
        display: Compact
        return: t-ContentRow--styleCompact

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Hide Borders ======================
    id: 10601540586775092
    identification: 
      static-id: HIDE_BORDERS
      attribute: 28
      name: Hide Borders
      scope: Report

    layout: 
      attribute-group: Appearance # 1680913765865573192
      sequence: 280

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

  - # ====== Custom Attribute: Remove Padding ====================
    id: 10602078990775094
    identification: 
      static-id: REMOVE_PADDING
      attribute: 30
      name: Remove Padding
      scope: Report

    layout: 
      attribute-group: Appearance # 1680913765865573192
      sequence: 300

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

  action-positions: 
  - # ====== Action Position: Badge Link =========================
    id: 1522068759927909890
    identification: 
      name: Badge Link
      static-id: BADGE_LINK
      sequence: 50

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Title Link =========================
    id: 1802878759952767940
    identification: 
      name: Title Link
      static-id: TITLE_LINK
      sequence: 30

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Full Row Link ======================
    id: 1803558060682851044
    identification: 
      name: Full Row Link
      static-id: FULL_ROW_LINK
      sequence: 40

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Avatar Link ========================
    id: 1816470453560129687
    identification: 
      name: Avatar Link
      static-id: AVATAR_LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

  - # ====== Action Position: Primary Actions ====================
    id: 1816471786950143544
    identification: 
      name: Primary Actions
      static-id: PRIMARY_ACTIONS
      sequence: 20

    advanced: 
      quick-pick: false

    settings: 
      type: Template

  action-templates: 
  - # ====== Action Template: Button =============================
    id: 1816472388627174673
    identification: 
      name: Button
      type: Button

    template: 
      action-template: |
        {with/}
        LINK_URL:=#LINK_URL!RAW#
        LINK_ATTR:=#LINK_ATTR!RAW#
        LABEL:=#LABEL!RAW#
        ICON_CLASSES:=#ICON_CLASSES#
        CSS_CLASSES:=#CSS_CLASSES#
        IS_HOT:=#IS_HOT#
        IS_ICON_ONLY:=#IS_ICON_ONLY#
        IS_DISABLED:=#IS_DISABLED#
        {apply THEME$BUTTON/}

    advanced: 
      translatable: false

  - # ====== Action Template: Menu ===============================
    id: 1816473648147178821
    identification: 
      name: Menu
      type: Menu

    template: 
      action-template: |
        {with/}
        MENU_ID:=#MENU_ID#
        LABEL:=#LABEL!RAW#
        ICON_CLASSES:=#ICON_CLASSES#
        CSS_CLASSES:=#CSS_CLASSES#
        IS_HOT:=#IS_HOT#
        IS_DISABLED:=#IS_DISABLED#
        IS_ICON_ONLY:=#IS_ICON_ONLY#
        {apply THEME$BUTTON/}
        #MENU#

    advanced: 
      translatable: false

- # ====== Plugin: Media List ==================================
  id: 8057601286281438
  identification: 
    name: Media List
    internal-name: THEME_42$MEDIA_LIST
    theme: Universal Theme # 42
    type: Template Component

  advanced: 
    quick-pick: true

  subscription: 
    master: 
      referenced-id: 1564403634518414297

    subscribe-component-settings: true

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div class="t-MediaList-itemWrap">
          {if DISPLAY_AVATAR/}
            <div class="t-MediaList-iconWrap" aria-hidden="true">
              {with/}
                SIZE:=t-Avatar--xs
                SHAPE:=#AVATAR_SHAPE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-MediaList-body">
            {if ?TITLE%assigned/}<div class="t-MediaList-title is-placeholder"></div>{endif/}
            {if ?DESCRIPTION%assigned/}<div class="t-MediaList-desc is-placeholder"></div>{endif/}
          </div>
          {if DISPLAY_BADGE%assigned/}
            {with/}
              LABEL:=
              VALUE:=
              SHAPE:=#BADGE_SHAPE#
              STYLE:=#BADGE_STYLE#
            {apply THEME$BADGE/}
          {endif/}
        </div>
      {else/}
        {if LINK/}<a href="#LINK!ATTR#" #LINK_ATTR!RAW#{else/}<div{endif/} class="t-MediaList-itemWrap{if ?DESCRIPTION/} t-MediaList-itemWrap--showDesc{endif/}">
          {if DISPLAY_AVATAR/}
            <div class="t-MediaList-iconWrap" aria-hidden="true">
              {with/}
                TYPE:=#AVATAR_TYPE#
                IMAGE:=#AVATAR_IMAGE#
                DESCRIPTION:=#AVATAR_DESCRIPTION#
                ICON:=#AVATAR_ICON#
                INITIALS:=#AVATAR_INITIALS#
                CSS_CLASSES:=u-color
                SHAPE:=#AVATAR_SHAPE#
              {apply THEME$AVATAR/}
            </div>
          {endif/}
          <div class="t-MediaList-body">
            {if ?TITLE/}<h3 class="t-MediaList-title">#TITLE!RAW#</h3>{endif/}
            {if ?DESCRIPTION/}<p class="t-MediaList-desc">#DESCRIPTION!RAW#</p>{endif/}
          </div>
          {if DISPLAY_BADGE/}
            {with/}
              LABEL_DISPLAY:=#BADGE_LABEL_DISPLAY#
              LABEL:=#BADGE_LABEL#
              VALUE:=#BADGE_VALUE#
              ICON:=#BADGE_ICON#
              STATE:=#BADGE_STATE#
              SIZE:=t-Badge--md
              STYLE:=#BADGE_STYLE#
              SHAPE:=#BADGE_SHAPE#
            {apply THEME$BADGE/}
          {endif/}
        {if LINK/}</a>{else/}</div>{endif/}
      {endif/}
    report-body: '<ul class="t-MediaList t-MediaList--showIcons{if ?LAYOUT/} #LAYOUT!ATTR#{endif/}{if ?SIZE/} #SIZE!ATTR#{endif/}{if APPLY_THEME_COLORS/} u-colors{endif/} #APEX$COMPONENT_CSS_CLASSES#">#APEX$ROWS#</ul>'
    report-row: '<li class="t-MediaList-item" #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL#</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Function

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    help-text: Display report content in a formatted media list. Supports avatars and badges. Available for a single row or as a report with multiple rows.

  attribute-groups: 
  - # ====== Attribute Group: Badge ==============================
    id: 1810630465635658783
    identification: 
      name: Badge
      sequence: 20

  - # ====== Attribute Group: Avatar =============================
    id: 1810631020647658784
    identification: 
      name: Avatar
      sequence: 10

  custom-attributes: 
  - # ====== Custom Attribute: Title =============================
    id: 10613777683775142
    identification: 
      static-id: TITLE
      attribute: 1
      name: Title
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used as the title.

    examples: 
      demo-value: Lorem ipsum dolor sit amet

  - # ====== Custom Attribute: Description =======================
    id: 10614207417775143
    identification: 
      static-id: DESCRIPTION
      attribute: 2
      name: Description
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Select a source column to be used for the row description.

    examples: 
      demo-value: Nunc sit amet nunc quis magna ornare suscipit. Etiam aliquet maximus sapien, at sagittis sem gravida nec.

  - # ====== Custom Attribute: Display Avatar ====================
    id: 10614791321775145
    identification: 
      static-id: DISPLAY_AVATAR
      attribute: 3
      name: Display Avatar
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the avatar for each row. When set to Yes, an avatar will be displayed with the assigned image, icon, or initials. When set to No, no avatar will be displayed.

  - # ====== Custom Attribute: Display Badge =====================
    id: 10615263005775146
    identification: 
      static-id: DISPLAY_BADGE
      attribute: 4
      name: Display Badge
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    help: 
      help-text: Specify whether to display or hide the badge for each row. When set to Yes, a badge will be displayed in each row. When set to No, no badge will be displayed.

  - # ====== Custom Attribute: Type ==============================
    id: 10615728449775148
    identification: 
      static-id: AVATAR_TYPE
      attribute: 5
      name: Type
      scope: Component

    layout: 
      attribute-group: Avatar # 1810631020647658784
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML

    default: 
      value: icon

    condition: 
      depending-on-custom-attribute: Display Avatar # 10614791321775145
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the type of content that will be displayed in the avatar.

    examples: 
      demo-value: icon

    entries: 
    - # ====== Entry: Image ========================================
      id: 10616239770775149
      entry: 
        sequence: 10
        display: Image
        return: image

      advanced: 
        quick-pick: false

    - # ====== Entry: Initials =====================================
      id: 10616803185775150
      entry: 
        sequence: 20
        display: Initials
        return: initials

      advanced: 
        quick-pick: false

    - # ====== Entry: Icon =========================================
      id: 10617471008775152
      entry: 
        sequence: 30
        display: Icon
        return: icon

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Image =============================
    id: 10618003243775153
    identification: 
      static-id: AVATAR_IMAGE
      attribute: 6
      name: Image
      scope: Component

    layout: 
      attribute-group: Avatar # 1810631020647658784
      sequence: 60

    settings: 
      type: Media
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Type # 10615728449775148
      depending-on-condition-type: equal to
      expression: image
      always-evaluate: true

    help: 
      help-text: |
        <p>Use the Media popup dialog to select a source for the avatar image.</p>
        
        <p>Available options include:
        <ul>
        <li>URL</li>
        <li>BLOB Column</li>
        <li>URL Column</li>
        </ul>
        </p>

  - # ====== Custom Attribute: Description =======================
    id: 10618542739775155
    identification: 
      static-id: AVATAR_DESCRIPTION
      attribute: 7
      name: Description
      scope: Component

    layout: 
      attribute-group: Avatar # 1810631020647658784
      sequence: 95

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Avatar # 10614791321775145
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a short description of the image/icon or select a source column from the quick pick options. This will be used as title & alt text for the avatar image/icon.

  - # ====== Custom Attribute: Initials ==========================
    id: 10619094334775156
    identification: 
      static-id: AVATAR_INITIALS
      attribute: 8
      name: Initials
      scope: Component

    layout: 
      attribute-group: Avatar # 1810631020647658784
      sequence: 80

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: Strip HTML

    condition: 
      depending-on-custom-attribute: Type # 10615728449775148
      depending-on-condition-type: equal to
      expression: initials
      always-evaluate: true

    help: 
      help-text: Select the source column to be displayed within each avatar. Only varchar2 data types are supported.

  - # ====== Custom Attribute: Icon ==============================
    id: 10619542266775157
    identification: 
      static-id: AVATAR_ICON
      attribute: 9
      name: Icon
      scope: Component

    layout: 
      attribute-group: Avatar # 1810631020647658784
      sequence: 90

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: fa-user

    condition: 
      depending-on-custom-attribute: Type # 10615728449775148
      depending-on-condition-type: equal to
      expression: icon
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the avatar.

  - # ====== Custom Attribute: Shape =============================
    id: 10619952965775159
    identification: 
      static-id: AVATAR_SHAPE
      attribute: 10
      name: Shape
      scope: Component

    layout: 
      attribute-group: Avatar # 1810631020647658784
      sequence: 100

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: t-Avatar--rounded

    condition: 
      depending-on-custom-attribute: Display Avatar # 10614791321775145
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the avatar. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10620491514775160
      entry: 
        sequence: 10
        display: Rounded
        return: t-Avatar--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10621026375775161
      entry: 
        sequence: 20
        display: Circular
        return: t-Avatar--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a circular shape.

    - # ====== Entry: Square =======================================
      id: 10621612806775163
      entry: 
        sequence: 30
        display: Square
        return: t-Avatar--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed within a square shape.

    - # ====== Entry: No Shape =====================================
      id: 10622282690775164
      entry: 
        sequence: 40
        display: No Shape
        return: t-Avatar--noShape

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed inline without a containing shape.

  - # ====== Custom Attribute: Label =============================
    id: 10622843660775166
    identification: 
      static-id: BADGE_LABEL
      attribute: 11
      name: Label
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 110

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter a value for the badge label or select a source column from the quick pick options.

  - # ====== Custom Attribute: Value =============================
    id: 10623352417775167
    identification: 
      static-id: BADGE_VALUE
      attribute: 12
      name: Value
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 120

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      - Number
      - Date
      - Interval Year to Month
      - Interval Day to Second
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select a source column for the badge value.

  - # ====== Custom Attribute: State =============================
    id: 10623821548775169
    identification: 
      static-id: BADGE_STATE
      attribute: 13
      name: State
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 130

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the source column for the state of the badge. Substitute column value with "danger", "warning", "success" or "info" for default styling.

  - # ====== Custom Attribute: Icon ==============================
    id: 10624366844775170
    identification: 
      static-id: BADGE_ICON
      attribute: 14
      name: Icon
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 140

    settings: 
      type: Icon
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Enter an icon class or use the Pick Icon dialog to select the icon you want to add to display in the badge.

  - # ====== Custom Attribute: Display Label =====================
    id: 10624872391775172
    identification: 
      static-id: BADGE_LABEL_DISPLAY
      attribute: 15
      name: Display Label
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 150

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: N

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Specify whether to display or hide the badge label. When set to Yes, the badge label will be displayed in addition to the badge value. When set to No, only the badge value will be displayed.

  - # ====== Custom Attribute: Style =============================
    id: 10625375083775173
    identification: 
      static-id: BADGE_STYLE
      attribute: 16
      name: Style
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 160

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the badge style. Default inherits the style set by the containing template.

    entries: 
    - # ====== Entry: Subtle =======================================
      id: 10625820362775175
      entry: 
        sequence: 10
        display: Subtle
        return: t-Badge--subtle

      advanced: 
        quick-pick: false

    - # ====== Entry: Outline ======================================
      id: 10626406403775176
      entry: 
        sequence: 20
        display: Outline
        return: t-Badge--outline

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Shape =============================
    id: 10627097239775177
    identification: 
      static-id: BADGE_SHAPE
      attribute: 17
      name: Shape
      scope: Component

    layout: 
      attribute-group: Badge # 1810630465635658783
      sequence: 170

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    condition: 
      depending-on-custom-attribute: Display Badge # 10615263005775146
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: Select the shape of the badge. Default inherits the shape set by the containing template.

    entries: 
    - # ====== Entry: Rounded ======================================
      id: 10627599899775179
      entry: 
        sequence: 10
        display: Rounded
        return: t-Badge--rounded

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with rounded corners.

    - # ====== Entry: Circular =====================================
      id: 10628163751775180
      entry: 
        sequence: 20
        display: Circular
        return: t-Badge--circle

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with circular edges.

    - # ====== Entry: Square =======================================
      id: 10628753306775181
      entry: 
        sequence: 30
        display: Square
        return: t-Badge--square

      advanced: 
        quick-pick: false

      help: 
        help-text: Displayed with squared edges.

  - # ====== Custom Attribute: Layout ============================
    id: 10629332253775182
    identification: 
      static-id: LAYOUT
      attribute: 18
      name: Layout
      scope: Report

    layout: 
      sequence: 180

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML Attribute

    help: 
      help-text: Select the number of grid columns the media list content will display in. Horizontal Span will display all columns in a single horizontal row.

    entries: 
    - # ====== Entry: 2 Column Grid ================================
      id: 10629857020775183
      entry: 
        sequence: 10
        display: 2 Column Grid
        return: t-MediaList--cols t-MediaList--2cols

      advanced: 
        quick-pick: false

    - # ====== Entry: 3 Column Grid ================================
      id: 10630491689775185
      entry: 
        sequence: 20
        display: 3 Column Grid
        return: t-MediaList--cols t-MediaList--3cols

      advanced: 
        quick-pick: false

    - # ====== Entry: 4 Column Grid ================================
      id: 10631000480775186
      entry: 
        sequence: 30
        display: 4 Column Grid
        return: t-MediaList--cols t-MediaList--4cols

      advanced: 
        quick-pick: false

    - # ====== Entry: 5 Column Grid ================================
      id: 10631637914775187
      entry: 
        sequence: 40
        display: 5 Column Grid
        return: t-MediaList--cols t-MediaList--5cols

      advanced: 
        quick-pick: false

    - # ====== Entry: Horizontal Span ==============================
      id: 10632202585775189
      entry: 
        sequence: 50
        display: Horizontal Span
        return: t-MediaList--horizontal

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Size ==============================
    id: 10632884817775190
    identification: 
      static-id: SIZE
      attribute: 19
      name: Size
      scope: Report

    layout: 
      sequence: 190

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      lov-null-text: Default
      escape-mode: HTML

    help: 
      help-text: Set the size of media list items.

    entries: 
    - # ====== Entry: Large ========================================
      id: 10633395691775191
      entry: 
        sequence: 10
        display: Large
        return: t-MediaList--large force-fa-lg

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Apply Theme Colors ================
    id: 10633958984775193
    identification: 
      static-id: APPLY_THEME_COLORS
      attribute: 20
      name: Apply Theme Colors
      scope: Report

    layout: 
      sequence: 200

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      escape-mode: HTML Attribute

    default: 
      value: Y

    help: 
      help-text: Specify whether to use the Universal Theme colors for avatar and badge row items. When set to Yes, the u-colors class will be applied to each row. When set to No, a default color will be used instead.

  action-positions: 
  - # ====== Action Position: Link ===============================
    id: 1808279276449311715
    identification: 
      name: Link
      static-id: LINK
      sequence: 10

    advanced: 
      quick-pick: false

    settings: 
      type: Link

- # ====== Plugin: United Codes List Extension =================
  id: 47918728746861852407
  identification: 
    name: United Codes List Extension
    internal-name: UNITEDCODES_LIST_EXTENSION
    type: Dynamic Action

  advanced: 
    category: Initialize
    quick-pick: false

  source: 
    pl/sql-code: |
      --
      -- Package UC_LIST_EXTENSION needed in order for this to work
      --

  callbacks: 
    api-interface: Procedure
    render-procedure/function-name: UC_LIST_EXTENSION.render
    ajax-procedure/function-name: UC_LIST_EXTENSION.ajax

  standard-attributes: 
    attributes: 
    - For Button

  custom-attributes: 
    substitute-attribute-values: true

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#js/uclistextension.min.js'

  information: 
    version: 21.2
    about-url: 'https://www.plug-ins-pro.com'
    help-text: |
      Plug-ins Pro List Extension is an Oracle APEX plug-in designed to improve the user experience when adding new values to an existing List of Values (LOV). Users can quickly and easily add a new value to an existing Select List, Popup LOV, Radio Group, Checkbox, or Shuttle and automatically select the newly created value - all without leaving the page they are working on or losing their place in the application!
      
      
      This plug-in should be used in combination with a modal window for the detail page.

  custom-attributes: 
  - # ====== Custom Attribute: Type ==============================
    id: 47484960525322653939
    identification: 
      attribute: 5
      name: Type
      scope: Component

    layout: 
      sequence: 5

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: PI

    help: 
      help-text: The main setting of the plug-in. With this option, we decide if we use a normal page item or an Interactive Grid column.

    entries: 
    - # ====== Entry: Page item ====================================
      id: 47484975545066652731
      entry: 
        sequence: 10
        display: Page item
        return: PI

      advanced: 
        quick-pick: false

    - # ====== Entry: Interactive Grid =============================
      id: 47484975964533650541
      entry: 
        sequence: 20
        display: Interactive Grid
        return: IG

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: IG static name ====================
    id: 47485006089037638885
    identification: 
      attribute: 6
      name: IG static name
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Type # 47484960525322653939
      depending-on-condition-type: equal to
      expression: IG
      always-evaluate: true

    help: 
      help-text: here we specify the static id of the interactive grid region. With this option, the plugin creates additional refresh actions needed in order plug in to work.

  - # ====== Custom Attribute: IG column name ====================
    id: 47485021173587634292
    identification: 
      attribute: 7
      name: IG column name
      scope: Component

    layout: 
      sequence: 15

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Type # 47484960525322653939
      depending-on-condition-type: equal to
      expression: IG
      always-evaluate: true

    help: 
      help-text: This option is to specify the column name of the interactive grid region. With this option, the plugin connects the column and the button among other needed actions.

    examples: 
      examples: DEPTNO

  - # ====== Custom Attribute: Page item =========================
    id: 47918729175295849622
    identification: 
      attribute: 1
      name: Page item
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Type # 47484960525322653939
      depending-on-condition-type: equal to
      expression: PI
      always-evaluate: true

    help: 
      help-text: |
        This is the main setting of the plug-in. Please select an item in which new value will be returned.<br>
        The item must be set  on this page when the plugin is used so that JavaScript can access it.The item needs to be one of the following types :<br>
        <ul>
        <li>PopupLov,</li>
        <li>Select list,</li>
        <li>Radio group,</li>
        <li>Checkbox group,</li>
        <li>Shuttle type</li>
        </ul>
        <br>
        For the plugin to work, items must also use "Dynamic" List Of Values (LOV).<br>
        In case of wrongly selected page item, an error message will appear as page render error.

  - # ====== Custom Attribute: Page returning item value =========
    id: 47918729531076848430
    identification: 
      attribute: 2
      name: Page returning item value
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Page Item
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    help: 
      help-text: |
        This attribute decides the item name by returning a new value id.<br>
        The Best approach is to find the primary key item through this setting.<br>
        <br>
        IMPORTANT: Do not forget to add the item into "Items to Return" on the DialogClose process in the modal window page!<br>
        In case there is no item to return, fetch action will not be triggered.<br>

    examples: 
      examples: P200_DEPTNO

  - # ====== Custom Attribute: Action ============================
    id: 47918729768185837101
    identification: 
      attribute: 3
      name: Action
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: set

    help: 
      help-text: |
        This action is possible only on items that support multiple choice otherwise default behavior "Set Value" is taken by default.<br>
        <br>
        <p>
        <h4>Set Value</h4>
        When the action is set to "Set Value" and a new value id is created, the item gets replaced with new value.<br>
        This setting is applied to the selected page item by default.
        </p>
        <p>
        <h4>Append Value</h4>
        When the action is set to "Append Value" and a new value id is created, the item adds a new value to the already existing stack.<br>
        Multiple values setting on the item must be enabled so that action "Append Value" can take place.
        </p>

    entries: 
    - # ====== Entry: Append Value =================================
      id: 47918730495908833663
      entry: 
        sequence: 20
        display: Append Value
        return: append

      advanced: 
        quick-pick: false

    - # ====== Entry: Set Value ====================================
      id: 47918731181213831153
      entry: 
        sequence: 10
        display: Set Value
        return: set

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Button location ===================
    id: 47918841788725960007
    identification: 
      attribute: 4
      name: Button location
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: stretch

    help: 
      help-text: |
        Button location gets interesting while using "radio group", "checkbox group" or "shuttle" element with a lot of data to display.<br>
        With this setting we can easily manage button position.<br>
        <br>
        Shuttle element has additional classes to be displayed among already existing buttons.<br>

    examples: 
      examples: 'Default and suggestion to use is : "stretch" option'

    entries: 
    - # ====== Entry: Popup LOV (inline) ===========================
      id: 47485081226714624789
      entry: 
        sequence: 50
        display: Popup LOV (inline)
        return: popup-inline

      advanced: 
        quick-pick: false

      help: 
        help-text: Used only in case of PopupLOV to display button inline with other selectable entities.

    - # ====== Entry: Stretch ======================================
      id: 47918852459168959241
      entry: 
        sequence: 10
        display: Stretch
        return: stretch

      advanced: 
        quick-pick: false

    - # ====== Entry: Top ==========================================
      id: 47918852835530958108
      entry: 
        sequence: 20
        display: Top
        return: top

      advanced: 
        quick-pick: false

    - # ====== Entry: Center =======================================
      id: 47918853197457957415
      entry: 
        sequence: 30
        display: Center
        return: center

      advanced: 
        quick-pick: false

    - # ====== Entry: Bottom =======================================
      id: 47918853588993956522
      entry: 
        sequence: 40
        display: Bottom
        return: bottom

      advanced: 
        quick-pick: false

  files: 
  - # ====== File: js/uclistextension.min.js =====================
    id: 47919201105065219736
    identification: 
      file-name: js/uclistextension.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: FOS - Range Slider ==========================
  id: 49743887798145006111
  identification: 
    name: FOS - Range Slider
    internal-name: COM.FOS.RANGE_SLIDER
    type: Item

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      -- =============================================================================
      --
      --  FOS = FOEX Open Source (fos.world), by FOEX GmbH, Austria (www.foex.at)
      --
      --  This plug-in offers a range slider with various options.
      --
      --  License: MIT
      --
      --  GitHub: 
      --
      -- =============================================================================
      function split_string_into_words
        ( p_string          varchar2
        , p_word_sep_arr    apex_t_varchar2
        ) 
      return apex_t_varchar2
      as
          l_char      varchar2(1);
          l_word      varchar2(200);
          l_result    apex_t_varchar2 := apex_t_varchar2();
      
          -- add the word to the result array and clear the variable(l_word)
          procedure add_word
              ( p_word in out varchar2
              )
          as
          begin
              if p_word is not null 
              then
                  apex_string.push(l_result,p_word);
                  p_word := null;
              end if;
          end add_word;
      
      begin
          for idx in 1 .. length(p_string)
          loop
              l_char := substr(p_string,idx,1);
              
              if l_char member of p_word_sep_arr
              then
                  -- if it's a special character, add the word and the char to the result array
                  add_word(l_word);
                  add_word(l_char);
              else
                  l_word := l_word || l_char;
              end if;
              
          end loop;
      
          add_word(l_word);
      
          return l_result;
      end split_string_into_words;
      
      -- maps oracle date format to moment.js
      function map_date_formats
        ( p_format      varchar2
        , p_date_format boolean default true
        , p_time_format boolean default true
        ) 
      return varchar2
      is
          l_js_format varchar2(200);
      begin  
          case upper(p_format)
              when '-'       then l_js_format := p_format;
              when ','       then l_js_format := p_format;
              when '.'       then l_js_format := p_format;
              when ';'       then l_js_format := p_format;
              when ':'       then l_js_format := p_format;
              when ' '       then l_js_format := p_format;
              when '/'       then l_js_format := p_format;
              when 'MI'      then l_js_format := case when p_time_format then 'm'    else '' end; -- minute 1,2,3,..., 60
              when 'AM'      then l_js_format := case when p_time_format then 'A'    else '' end; -- AM,PM
              when 'D'       then l_js_format := case when p_date_format then 'E'    else '' end; -- 1,2,3, ... ,7
              when 'DY'      then l_js_format := case when p_date_format then 'ddd'  else '' end; -- Mon, Tue, Wed, ...
              when 'DAY'     then l_js_format := case when p_date_format then 'dddd' else '' end; -- Monday, Tuesday, ...
              when 'FMDAY'   then l_js_format := case when p_date_format then 'dddd' else '' end; -- Monday, Tuesday, ...
              when 'DD'      then l_js_format := case when p_date_format then 'DD'   else '' end; -- 1,2,3, ...31
              when 'FMDD'    then l_js_format := case when p_date_format then 'D'    else '' end; -- 1,2,3, ...31
              when 'DDTH'    then l_js_format := case when p_date_format then 'DDDo' else '' end; -- 1st, 2nd, 3rd, ... ,31th
              when 'DDD'     then l_js_format := case when p_date_format then 'DDD'  else '' end; -- 1,2,3, ... ,365
              when 'HH'      then l_js_format := case when p_time_format then 'h'    else '' end; -- 1,2,3, ... ,12 
              when 'HH12'    then l_js_format := case when p_time_format then 'hh'   else '' end; -- 01,02,03, ... ,12 
              when 'HH24'    then l_js_format := case when p_time_format then 'HH'   else '' end; -- 01,02,03, ... ,24 
              when 'FMHH'    then l_js_format := case when p_time_format then 'H'    else '' end; -- 1,2,3, ... ,12 
              when 'FMHH12'  then l_js_format := case when p_time_format then 'h'    else '' end; -- 01,02,03, ... ,12
              when 'FMHH24'  then l_js_format := case when p_time_format then 'H'    else '' end; -- 01,02,03, ... ,24
              when 'IW'      then l_js_format := case when p_date_format then 'W'    else '' end; -- week of the year 
              when 'IYYY'    then l_js_format := case when p_time_format then 'Y'    else '' end; -- 2020,2021,2022...
              when 'MI'      then l_js_format := case when p_time_format then 'm'    else '' end; -- minute 1,2,3,..., 60
              when 'M'       then l_js_format := case when p_time_format then 'M'    else '' end; -- month 1,2,3,..,12
              when 'MM'      then l_js_format := case when p_date_format then 'MM'   else '' end; -- month 01,02,03,..,12
              when 'MON'     then l_js_format := case when p_date_format then 'MMM'  else '' end; -- Jan, Feb, ... ,Dec
              when 'MONTH'   then l_js_format := case when p_date_format then 'MMMM' else '' end; -- January, February, ..., December
              when 'FMMONTH' then l_js_format := case when p_date_format then 'MMMM' else '' end; -- January, February, ..., December
              when 'PM'      then l_js_format := case when p_time_format then 'A'    else '' end; -- AM,PM
              when 'RR'      then l_js_format := case when p_date_format then 'YY'   else '' end; -- last two digits of the year
              when 'RRRR'    then l_js_format := case when p_date_format then 'YYYY' else '' end; -- 2020,2021,...
              when 'SS'      then l_js_format := case when p_time_format then 's'    else '' end; -- seconds 1,2,3,...,59
              when 'WW'      then l_js_format := case when p_date_format then 'w'    else '' end; -- week of the year (bit different than the iw)
              when 'YY'      then l_js_format := case when p_date_format then 'YY'   else '' end; -- last two digits of the year
              when 'YYYY'    then l_js_format := case when p_date_format then 'YYYY' else '' end;
              when 'XFF'     then l_js_format := case when p_time_format then '.u'   else '' end;
              when 'TZR'     then l_js_format := case when p_time_format then 'z'    else '' end; -- timezone
              --
              -- date format not found
              -- should we do more guessing or raise an exception ???
              else 
                  l_js_format := '';         
          end case;
          
          return l_js_format;
      
      end map_date_formats;
      
      -- calls the combination of the two functions above
      function oracle_to_js_date_format
        ( p_oracle_format varchar2
        ) 
      return varchar2
      as
          l_date_parts   apex_t_varchar2;
          -- possible characters used in the date format as a separator
          l_date_sep_arr apex_t_varchar2 := apex_t_varchar2('-',',','.',';',':',' ','/');
          l_result       varchar2(400);
      begin
          if p_oracle_format is null then 
              return null; 
          end if;
          l_date_parts := split_string_into_words
                            ( p_string       => p_oracle_format
                            , p_word_sep_arr => l_date_sep_arr
                            );
          for i in 1 .. l_date_parts.count
          loop
              l_result := l_result || map_date_formats(l_date_parts(i));
          end loop;
      
          return l_result;
      end oracle_to_js_date_format;
      
      procedure render
        ( p_item   in            apex_plugin.t_item
        , p_plugin in            apex_plugin.t_plugin
        , p_param  in            apex_plugin.t_item_render_param
        , p_result in out nocopy apex_plugin.t_item_render_result 
        )
      as
          l_item_id              p_item.id%type             := p_item.id;
          l_item_name            p_item.name%type           := p_item.name;
          l_item_value           p_param.value%type         := p_param.value;
          l_item_value_arr       apex_t_varchar2            := apex_string.split(l_item_value, ':');
          l_item_height          p_item.element_height%type := p_item.element_height;
          l_init_js              varchar2(32767)            := nvl(apex_plugin_util.replace_substitutions(p_item.init_javascript_code), 'undefined');
          l_date_format          p_item.format_mask%type    := nvl(p_item.format_mask, :APP_NLS_DATE_FORMAT);
      
          --attributes
          l_type                 p_item.attribute_01%type   := p_item.attribute_01;
          l_handles              p_item.attribute_02%type   := p_item.attribute_02;
          l_min_range            p_item.attribute_03%type   := p_item.attribute_03;
          l_max_range            p_item.attribute_04%type   := p_item.attribute_04;
          l_min_date             p_item.attribute_05%type   := p_item.attribute_05;
          l_max_date             p_item.attribute_06%type   := p_item.attribute_06;
          l_date_steps           p_item.attribute_07%type   := p_item.attribute_07;
          l_number_steps         p_item.attribute_08%type   := p_item.attribute_08;  
          l_orientation          p_item.attribute_09%type   := p_item.attribute_09;
          l_options              p_item.attribute_10%type   := p_item.attribute_10;
          l_enable_tooltips      boolean                    := instr(l_options, 'enable-tooltip'            ) > 0;
          l_enable_ticks         boolean                    := instr(l_options, 'enable-ticks'              ) > 0;
          l_return_value_item    boolean                    := instr(l_options, 'bind-value-to-item'        ) > 0;
          l_connect_bar          boolean                    := instr(l_options, 'connects-bar'              ) > 0;
          l_flip_range           boolean                    := instr(l_options, 'flip-range'                ) > 0;
          l_use_display_fmt      boolean                    := instr(l_options, 'custom-display-format-mask') > 0;
          l_ticks_num            p_item.attribute_11%type   := p_item.attribute_11;
          l_return_item          p_item.attribute_12%type   := p_item.attribute_12;
          l_range_color          p_item.attribute_13%type   := p_item.attribute_13;    
          l_custom_display_fmt   p_item.attribute_13%type   := oracle_to_js_date_format(p_item.attribute_14);   
          -- local variables
          l_step                 varchar2(100);
          l_min_value            varchar2(1000);
          l_max_value            varchar2(1000);
          l_number_separator     varchar2(10);
          l_js_date_format       varchar2(1000);
      begin
          -- standard debugging
          if apex_application.g_debug and substr(:DEBUG,6) >= 6 
          then
              apex_plugin_util.debug_page_item
                ( p_plugin    => p_plugin
                , p_page_item => p_item
                );
          end if; 
      
          if l_type = 'date'
          then
              -- transform the oracle date format into js specific (momentjs)
              l_js_date_format := oracle_to_js_date_format(l_date_format);
              -- set the date_steps to the step value
              l_step := l_date_steps;
              -- set the min and max values;
              l_min_value := l_min_date;
              l_max_value := l_max_date;
          else
              -- get the language dependent decimal separator
              select substr(value,1,1)
                into l_number_separator
                from nls_session_parameters
               where parameter = 'NLS_NUMERIC_CHARACTERS'
              ;
      
              -- pass the number_steps as the step value
              l_step := l_number_steps;
              -- set the min and max values
              l_min_value := l_min_range;
              l_max_value := l_max_range;
          end if;
                                                            
          --set initial values for item
          -- if there's no value provided, then we use the min - and - max values 
          if l_item_value is null
          then
              if l_type = 'number'
              then
                  apex_string.push(l_item_value_arr, l_min_range);
                  apex_string.push(l_item_value_arr, l_max_range);
              else
                  apex_string.push(l_item_value_arr, l_min_date);
                  apex_string.push(l_item_value_arr, l_max_date);
              end if;
          end if;
                                                            
          --print container div
          sys.htp.p('<div class="range-slider-'|| l_orientation ||'" id="'  || l_item_name || '"></div>');
          
          --creating json
          apex_json.initialize_clob_output;
          apex_json.open_object;
          
          apex_json.write('type'                  , l_type                            );
          apex_json.write('handles'               , l_handles                         );
          apex_json.write('minimumValue'          , l_min_value                       );
          apex_json.write('maximumValue'          , l_max_value                       );
          apex_json.write('itemHeight'            , l_item_height                     );
          apex_json.write('rangeColor'            , l_range_color                     );
          apex_json.write('showTicks'             , l_enable_ticks                    );
          apex_json.write('ticks'                 , l_ticks_num                       );
          apex_json.write('orientation'           , l_orientation                     );
          apex_json.write('tooltip'               , l_enable_tooltips                 );
          apex_json.write('returnValToItem'       , l_return_value_item               );
          apex_json.write('step'                  , l_step                            );
          apex_json.write('retItems'              , l_return_item                     );
          apex_json.write('connectBar'            , l_connect_bar                     );
          apex_json.write('flipRange'             , l_flip_range                      );
          apex_json.write('useDisplayFormat'      , l_use_display_fmt                 );
          if l_use_display_fmt then
              apex_json.write('displayFormat'     , l_custom_display_fmt              );
          end if;
          apex_json.write('itemName'              , l_item_name                       );
          apex_json.write('dateFormat'            , l_js_date_format                  );
          apex_json.open_object('numberFormat');
          apex_json.write('mark'                  , l_number_separator                );
          apex_json.close_object;
          apex_json.open_array('value');
      
          for i in 1 .. l_item_value_arr.count
          loop          
              if l_type = 'number'
              then
                  apex_json.write(l_item_value_arr(i));
              else
                  if l_use_display_fmt then
                      apex_json.write(l_item_value_arr(i)); 
                  else
                      apex_json.write(to_date(l_item_value_arr(i),l_date_format)); 
                  end if;
              end if;                                                   
          end loop;
      
          apex_json.close_array;
       
          apex_json.close_object;
      
          apex_javascript.add_onload_code(p_code => 'FOS.item.rangeSlider.init(' || apex_json.get_clob_output || ',' || l_init_js || ');');
          
          apex_json.free_output;
      
      end render;
      
      procedure validate
        ( p_item   in             apex_plugin.t_item
        , p_plugin in             apex_plugin.t_plugin
        , p_param  in             apex_plugin.t_item_validation_param
        , p_result in out nocopy  apex_plugin.t_item_validation_result
        )
      as
          l_value          p_param.value%type       := p_param.value;
          l_date_format    p_item.format_mask%type  := nvl(p_item.format_mask, :APP_NLS_DATE_FORMAT);                                                 
          l_type           p_item.attribute_01%type := p_item.attribute_01;
          l_min_range      p_item.attribute_03%type := p_item.attribute_03;
          l_max_range      p_item.attribute_04%type := p_item.attribute_04;
          l_min_date       p_item.attribute_05%type := p_item.attribute_05;
          l_max_date       p_item.attribute_06%type := p_item.attribute_06;
          
          l_min_date_value date;
          l_max_date_value date;
                                                            
          l_values         apex_t_varchar2;
          l_num_value      number;
          l_date_value     date;    
      begin
          
          if l_type = 'date'
          then
              l_min_date_value := to_date(l_min_date, l_date_format);
              l_max_date_value := to_date(l_max_date, l_date_format);
          end if;
                                                            
          l_values := apex_string.split(l_value, ':');
          
          for i in 1 .. l_values.count
          loop
              if l_type = 'number'
              then
                  l_num_value := to_number(l_values(i));
                  if l_num_value < l_min_range or l_num_value > l_max_range
                  then
                      p_result.message := 'Number is not in range';
                  end if;
              elsif l_type = 'date'
              then
                  l_date_value := to_date(l_values(i),l_date_format);
                  if l_date_value < l_min_date_value or l_date_value > l_max_date_value
                  then 
                      p_result.message := 'Date is not in range';
                  end if;
              end if;
          end loop;
      
      end validate;
      

  callbacks: 
    api-interface: Procedure
    render-procedure/function-name: render
    validation-procedure-name: validate

  supported-for: 
    component-type: 
    - Page Items

  standard-attributes: 
    attributes: 
    - Is Visible Widget
    - Standard Form Element
    - Session State Changeable
    - Has Read Only Attribute
    - Has Source Attributes
    - Format Mask Date Only
    - Has Element Attributes
    - Has Height Attribute
    - Has Element Option Attribute
    - Has Encrypt Session State Attribute
    - Has "Initialization JavaScript Code" Attribute

  custom-attributes: 
    substitute-attribute-values: true

  css: 
    file-urls: 
    - '#PLUGIN_FILES#css/nouislider-core.css'
    - '#PLUGIN_FILES#css/nouislider-pips.css'
    - '#PLUGIN_FILES#css/nouislider-tooltips.css'
    - '#PLUGIN_FILES#css/style.css'

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#libraries/nouislider.js'
    - '#PLUGIN_FILES#libraries/moment.js'
    - '#PLUGIN_FILES#libraries/wNumb.js'
    - '#PLUGIN_FILES#js/script.js'

  information: 
    version: 21.2.0
    about-url: 'https://fos.world'
    help-text: |
      <p>The <strong>FOS - Range Slider</strong> item plug-in is a lightweight range slider with multi-touch support and is packed with features. It supports numeric and date ranges, non-linear ranges, has keyboard support, and it works great in responsive designs. You can:</p>
      <ul>
      <li>Use it vertically or horizontally</li>
      <li>Use either a single or multiple value range</li>
      <li>Restrict the minimum/maximum range values</li>
      <li>Set page items with the range values</li>
      <li>Control the range colour</li>
      <li>Control the step size</li>
      </ul>
      <p>It's the perfect page item filter for your reports and charts.</p>
      <p>This item plug-in integrates the <strong>noUISlider</strong> JavaScript Range Slider (https://refreshless.com/nouislider/).</p>

  comments: 
    comments: |
      // Settings for the FOS browser extension
      @fos-auto-return-to-page
      @fos-auto-open-files:js/script.js,css/style.css

  standard-attributes: 
  - # ====== Standard Attribute: INIT_JAVASCRIPT_CODE ============
    id: 49856682103234726504
    identification: 
      name: INIT_JAVASCRIPT_CODE

    value: 
      required: false

    help: 
      help-text: You can use this attribute to define a function that will allow you to change/override the plugin settings. This gives you added flexibility of controlling the settings from a single Javascript function defined in a "Static Application File".

    examples: 
      examples: |
        <pre>
        function(config){
        
            // numberFormat = {}
            // A wNumb format object (please see: https://refreshless.com/wnumb/ for details) to be used for number-formatting in the slider.
            // Common properties are: { mark: '.', thousand: ',', prefix: '€ ', suffix: ' EUR', decimals: 2 }
            // The default of this object is based on your locale (if you don't override anything).
            config.numberFormat = { decimals: 0, mark: '.', thousand: ',' };
        
            // keyboardSupport = true/false
            // Enables movement of the handles with the keyboard.
            config.keyboardSupport = true;
        
            // direction = 'ltr'/'rtl'
            // Sets the directionality of the slider, either left-to-right or right-to-left.
            config.direction = 'ltr';
        
            // ticksStepped = true/false
            // Specifies whether the ticks should only appear under the values which can be "stepped to" (i.e. set).
            config.ticksStepped = true;
        
            // tickPercentages = []
            // Define an array of values (from 0 to 100) for the positions of the ticks relatively to the slider's range (e.g. [0, 50, 100] would place a tick at the min value, max value and at the center).
            config.tickPercentages = null;
        
            // tickValues = []
            // Define an array of absolute values for the positions of the ticks (e.g. [0, 500, 1500, 1700]).
            config.tickValues = null;
        
            // clickOnTicks = true/false
            // Enables / disables clicking on the ticks to set values.
            config.clickOnTicks = true;
        
            return config;
        }
        </pre>

  custom-attributes: 
  - # ====== Custom Attribute: Display Format Mask ===============
    id: 48543848500850188899
    identification: 
      attribute: 14
      name: Display Format Mask
      scope: Component

    layout: 
      sequence: 140

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Options # 49743893253591006120
      depending-on-condition-type: in list
      expression: custom-display-format-mask
      always-evaluate: true

    help: 
      help-text: <p>Enter the format mask you would like to display on the range slider, the actual values will be returned in the format mask defined for the item.</p>

  - # ====== Custom Attribute: Number Steps ======================
    id: 49437652842264643408
    identification: 
      attribute: 8
      name: Number Steps
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: 1

    condition: 
      depending-on-custom-attribute: Type # 49743888052019006117
      depending-on-condition-type: equal to
      expression: number
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: |
        Specifies the steps the handles(s) can be moved from one value to another.<br>
        <br>
        The user will be unable to set the value of the slider in-between these steps by dragging the handle(s).

  - # ====== Custom Attribute: Type ==============================
    id: 49743888052019006117
    identification: 
      attribute: 1
      name: Type
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: number

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The type of the slider - sets the data-type of the values the slider will be handling.

    entries: 
    - # ====== Entry: Date =========================================
      id: 49743888407203006118
      entry: 
        sequence: 20
        display: Date
        return: date

      advanced: 
        quick-pick: false

      help: 
        help-text: The slider will represent <i>Date</i> values.

    - # ====== Entry: Number =======================================
      id: 49743888901265006118
      entry: 
        sequence: 10
        display: Number
        return: number

      advanced: 
        quick-pick: false

      help: 
        help-text: The slider will represent <i>Number</i> values.

  - # ====== Custom Attribute: Handles ===========================
    id: 49743889421098006119
    identification: 
      attribute: 2
      name: Handles
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: 1

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The number of handles/knobs (draggable heads which indicate and change the value) of the slider.

    entries: 
    - # ====== Entry: Single =======================================
      id: 49743912611590012535
      entry: 
        sequence: 10
        display: Single
        return: 1

      advanced: 
        quick-pick: false

      help: 
        help-text: The slider's <i>getValue()</i> will return only one value (string).

    - # ====== Entry: Double =======================================
      id: 49743913007981013049
      entry: 
        sequence: 20
        display: Double
        return: 2

      advanced: 
        quick-pick: false

      help: 
        help-text: The slider's <i>getValue()</i> will return a colon-separated string of two values.

  - # ====== Custom Attribute: Minimum  Value ====================
    id: 49743889785363006119
    identification: 
      attribute: 3
      name: Minimum  Value
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Type # 49743888052019006117
      depending-on-condition-type: equal to
      expression: number
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The minimum value of the slider.

  - # ====== Custom Attribute: Maximum Value =====================
    id: 49743890205901006119
    identification: 
      attribute: 4
      name: Maximum Value
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Type # 49743888052019006117
      depending-on-condition-type: equal to
      expression: number
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The maximum value of the slider.

  - # ====== Custom Attribute: Range Color =======================
    id: 49743890617686006120
    identification: 
      attribute: 13
      name: Range Color
      scope: Component

    layout: 
      sequence: 130

    settings: 
      type: Color
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: '#0076df'

    condition: 
      depending-on-custom-attribute: Options # 49743893253591006120
      depending-on-condition-type: in list
      expression: connects-bar
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: Sets the color of the range, i.e. the background-color between the two handles.

  - # ====== Custom Attribute: Ticks =============================
    id: 49743891443938006120
    identification: 
      attribute: 11
      name: Ticks
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: 5

    condition: 
      depending-on-custom-attribute: Options # 49743893253591006120
      depending-on-condition-type: in list
      expression: enable-ticks
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: |
        The distribution of the value-indicating markers below (or next to, in case of vertical) the range slider.<br>
        <br>
        E.g. if the slider's minimum value is 0, maximum value is 100 and the number of ticks is 5 then the displayed markers are at values: 0, 25, 50, 75, 100

  - # ====== Custom Attribute: Orientation =======================
    id: 49743891839548006120
    identification: 
      attribute: 9
      name: Orientation
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: horizontal

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The orientation of the range slider.

    entries: 
    - # ====== Entry: Horizontal ===================================
      id: 49743892189007006120
      entry: 
        sequence: 10
        display: Horizontal
        return: horizontal

      advanced: 
        quick-pick: false

      help: 
        help-text: The item will be rendered horizontally, the <i>Handle(s)</i> can be moved sideway, left-and-right.

    - # ====== Entry: Vertical =====================================
      id: 49743892729595006120
      entry: 
        sequence: 20
        display: Vertical
        return: vertical

      advanced: 
        quick-pick: false

      help: 
        help-text: The item will be rendered vertically, the <i>Handle(s)</i> can be moved up-and-down.

  - # ====== Custom Attribute: Options ===========================
    id: 49743893253591006120
    identification: 
      attribute: 10
      name: Options
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: enable-ticks

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: A list of options you can apply on the item.

    entries: 
    - # ====== Entry: Custom Display Format Mask ===================
      id: 48543848066060179238
      entry: 
        sequence: 60
        display: Custom Display Format Mask
        return: custom-display-format-mask

      advanced: 
        quick-pick: false

      help: 
        help-text: You can enter a display format that is different from the value format. This is so you can support displaying week numbers using the WW/IW format and still have an actual "to_date" formattable value returned.

    - # ====== Entry: Enable Ticks =================================
      id: 49144438182352896931
      entry: 
        sequence: 10
        display: Enable Ticks
        return: enable-ticks

      advanced: 
        quick-pick: false

      help: 
        help-text: Shows the tick-markers and their values below (or on the side - in case of vertical orientation) the slider.

    - # ====== Entry: Flip Range ===================================
      id: 49743893637591006121
      entry: 
        sequence: 50
        display: Flip Range
        return: flip-range

      advanced: 
        quick-pick: false

      help: 
        help-text: It doesn't constrain/limit the position of a handle based on the other handle. In other words, it allows moving handle 1 beyond handle 2 and/or handle 2 before handle 1.

    - # ====== Entry: Connect Handles ==============================
      id: 49743894135791006121
      entry: 
        sequence: 40
        display: Connect Handles
        return: connects-bar

      advanced: 
        quick-pick: false

      help: 
        help-text: Connect the handles so both can be moved at the same time by dragging the bar between them. This will move both of them the same distance, changing their values but keeping the range between them.

    - # ====== Entry: Bind Value to Item(s) ========================
      id: 49743895152311006121
      entry: 
        sequence: 30
        display: Bind Value to Item(s)
        return: bind-value-to-item

      advanced: 
        quick-pick: false

      help: 
        help-text: One or two page items can be bound to the slider's value (based on the handle-count set). Whenever the page item value changes, the page item values will be updated automatically.

    - # ====== Entry: Enable Tooltips ==============================
      id: 49743896121269006121
      entry: 
        sequence: 20
        display: Enable Tooltips
        return: enable-tooltip

      advanced: 
        quick-pick: false

      help: 
        help-text: Displays a tooltip above the handle with its value.

  - # ====== Custom Attribute: Minimum Date ======================
    id: 49743898487646006122
    identification: 
      attribute: 5
      name: Minimum Date
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true

    condition: 
      depending-on-custom-attribute: Type # 49743888052019006117
      depending-on-condition-type: equal to
      expression: date
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The minimum date of the slider. Substitutions strings are supported. Please be aware that the specified date has to match the format mask of the item, or the display value format override, or if not set, the your application format mask (defined under Globalization) EXACTLY.

  - # ====== Custom Attribute: Maximum Date ======================
    id: 49743898912882006122
    identification: 
      attribute: 6
      name: Maximum Date
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true

    condition: 
      depending-on-custom-attribute: Type # 49743888052019006117
      depending-on-condition-type: equal to
      expression: date
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: The maximum date of the slider. Substitutions strings are supported. Please be aware that the specified date has to match the format mask of the item, or the display value format override, or if not set, the your application format mask (defined under Globalization) EXACTLY.

  - # ====== Custom Attribute: Date steps ========================
    id: 49743899315695006122
    identification: 
      attribute: 7
      name: Date steps
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: daily

    condition: 
      depending-on-custom-attribute: Type # 49743888052019006117
      depending-on-condition-type: equal to
      expression: date
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: |
        Specifies the steps the handle(s) can be moved from one value to another.<br>
        <br>
        E.g. if this option is set to "weekly", dragging the handle will change the slider's value in weekly intervals. The user will be unable to set the value of the slider in-between these steps by dragging the handle(s):<br>
        Current value: 2021.02.05 (yyyy.mm.dd)
        Next possible value: 2021.02.12 (yyyy.mm.dd)

    entries: 
    - # ====== Entry: Daily ========================================
      id: 49743899764917006122
      entry: 
        sequence: 10
        display: Daily
        return: daily

      advanced: 
        quick-pick: false

      help: 
        help-text: The interval you can move the <i>Handle(s)</i> will be <i>1 day</i>.

    - # ====== Entry: Weekly =======================================
      id: 49743900209625006123
      entry: 
        sequence: 20
        display: Weekly
        return: weekly

      advanced: 
        quick-pick: false

      help: 
        help-text: The interval you can move the <i>Handle(s)</i> will be <i>1 week(7 days)</i>.

    - # ====== Entry: Monthly ======================================
      id: 49743900776558006123
      entry: 
        sequence: 30
        display: Monthly
        return: monthly

      advanced: 
        quick-pick: false

      help: 
        help-text: The interval you can move the <i>Handle(s)</i> will be <i>1 Month</i>.

    - # ====== Entry: Yearly =======================================
      id: 49743901241004006123
      entry: 
        sequence: 40
        display: Yearly
        return: yearly

      advanced: 
        quick-pick: false

      help: 
        help-text: The interval you can move the <i>Handle(s)</i> will be <i>1 Year</i>.

  - # ====== Custom Attribute: Set Item(s) =======================
    id: 49743901692639006123
    identification: 
      attribute: 12
      name: Set Item(s)
      scope: Component

    layout: 
      sequence: 120

    settings: 
      type: Page Items
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Options # 49743893253591006120
      depending-on-condition-type: in list
      expression: bind-value-to-item
      always-evaluate: true

    supported-for: 
      component-type: 
      - Page Items
      - Interactive Grid Columns

    help: 
      help-text: Specify the page items to bind their value to the slider's value. If you are using multiple handles then 2 page items are required. The first item will receive the lower range value and the second item will receive the upper range value.

  events: 
  - # ====== Event: fos-rangeslider-change =======================
    id: 49853352170680153303
    identification: 
      name: FOS - Range Slider - Change
      internal-name: fos-rangeslider-change

  files: 
  - # ====== File: css/nouislider-core.css =======================
    id: 49743904616626006124
    identification: 
      file-name: css/nouislider-core.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-core.css.map ===================
    id: 49743905018706006124
    identification: 
      file-name: css/nouislider-core.css.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-core.min.css ===================
    id: 49743905409040006125
    identification: 
      file-name: css/nouislider-core.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-pips.css =======================
    id: 49743905877055006125
    identification: 
      file-name: css/nouislider-pips.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-pips.css.map ===================
    id: 49743906215891006125
    identification: 
      file-name: css/nouislider-pips.css.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-pips.min.css ===================
    id: 49743906672998006125
    identification: 
      file-name: css/nouislider-pips.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-tooltips.css ===================
    id: 49743907015233006125
    identification: 
      file-name: css/nouislider-tooltips.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-tooltips.css.map ===============
    id: 49743907438926006126
    identification: 
      file-name: css/nouislider-tooltips.css.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: css/nouislider-tooltips.min.css ===============
    id: 49743907838636006126
    identification: 
      file-name: css/nouislider-tooltips.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/style.css =================================
    id: 49743908219421006126
    identification: 
      file-name: css/style.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/style.css.map =============================
    id: 49743908668982006126
    identification: 
      file-name: css/style.css.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: css/style.min.css =============================
    id: 49743909015383006126
    identification: 
      file-name: css/style.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: js/script.js ==================================
    id: 49743909425291006126
    identification: 
      file-name: js/script.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: js/script.js.map ==============================
    id: 49743909793808006127
    identification: 
      file-name: js/script.js.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: js/script.min.js ==============================
    id: 49743910275083006127
    identification: 
      file-name: js/script.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/nouislider.js =======================
    id: 49743910601085006127
    identification: 
      file-name: libraries/nouislider.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/nouislider.js.map ===================
    id: 49743911077837006127
    identification: 
      file-name: libraries/nouislider.js.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/nouislider.min.js ===================
    id: 49743911454616006128
    identification: 
      file-name: libraries/nouislider.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/moment.js ===========================
    id: 49856210062027914546
    identification: 
      file-name: libraries/moment.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/moment.min.js =======================
    id: 49856210831383916800
    identification: 
      file-name: libraries/moment.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/moment.js.map =======================
    id: 49856211222544916803
    identification: 
      file-name: libraries/moment.js.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/wNumb.js ============================
    id: 49856677346162619196
    identification: 
      file-name: libraries/wNumb.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/wNumb.min.js ========================
    id: 49856678176253622307
    identification: 
      file-name: libraries/wNumb.min.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: libraries/wNumb.js.map ========================
    id: 49856678499887622309
    identification: 
      file-name: libraries/wNumb.js.map

    attributes: 
      mime-type: application/json
      file-character-set: Unicode UTF-8

- # ====== Plugin: United Codes Nested Reports =================
  id: 50957660806986861157
  identification: 
    name: United Codes Nested Reports
    internal-name: UC_NESTED_REPORTS
    type: Dynamic Action

  advanced: 
    category: Execute
    quick-pick: false

  callbacks: 
    api-interface: Function
    render-procedure/function-name: '#OWNER#.UC_NESTED_REPORTS.render_row_details'
    ajax-procedure/function-name: '#OWNER#.UC_NESTED_REPORTS.ajax_row_details'

  standard-attributes: 
    attributes: 
    - For Region
    - For jQuery Selector
    - Affected Element Required

  custom-attributes: 
    substitute-attribute-values: true

  css: 
    file-urls: 
    - '#PLUGIN_FILES#uc.nestedreports.css'

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#mustache.js'
    - '#PLUGIN_FILES#uc.nestedreportsCommon.js'
    - '#PLUGIN_FILES#uc.nestedreport.js'
    - null

  information: 
    version: 20.1
    about-url: 'https://www.plug-ins-pro.com/'

  custom-attributes: 
  - # ====== Custom Attribute: Expanding time ====================
    id: 49464955529555693048
    identification: 
      attribute: 1
      name: Expanding time
      scope: Application

    layout: 
      sequence: 10

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      unit: ms

    default: 
      value: 200

  - # ====== Custom Attribute: Collapsing time ===================
    id: 49464980689873698757
    identification: 
      attribute: 2
      name: Collapsing time
      scope: Application

    layout: 
      sequence: 20

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      unit: ms

    default: 
      value: 400

  - # ====== Custom Attribute: Default template HTML =============
    id: 49839019160196453295
    identification: 
      attribute: 13
      name: Default template HTML
      scope: Component

    layout: 
      sequence: 12

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      maximum-length: 4000

    default: 
      value: '#DEFAULT_TEMPLATE#'

    condition: 
      depending-on-custom-attribute: Default template options # 49839267289089439148
      depending-on-condition-type: in list
      expression: EDT
      always-evaluate: true

    help: 
      help-text: |
        <p>
        Any HTML applied before or after <code>#DEFAULT_TEMPLATE#</code> will be included in <code>default template</code>.
        </p>
        <p>
        Manual events are supported witin default template (check examples). Manual events are bound to elements with specific class.
        </p>

    examples: 
      examples: |
        <strong>Expand all</strong>
        <p>
          Force all child nested reports to expand on anchor click (where triggering element has class <code>showPersonal</code>)
        </p>
        <pre><code><a href="javascript: void(0)" class="nestedreport--expandAll" selector=".showPersonal">Expand all</a></code></pre>
        <br/>
        
        <strong>Refresh</strong>
        <p>
          Force current nested report to refresh itself (template and data).
        </p>
        <pre><code><a href="javascript: void(0)" title="Collapse all expanded" class="nestedreport--refresh">Refresh</a></code></pre>
        
        <br/>
        
        <strong>Collapse all expanded</strong>
        <p>
          Force child expanded nested reports to collapse on anchor click. Adding attribute <code>duration</code> to anchor will force plugin to override animation duration with given number of miliseconds.
        </p>
        <pre><code><a href="javascript: void(0)" title="Collapse all expanded" class="nestedreport--slideupAll" duration="200">Collapse all</a></code></pre>
        
        <br/>
        
        <strong>Collapse</strong>
        <p>
          Force current nested report to collapse. Adding attribute <code>duration</code> to anchor will force plugin to override animation duration with given number of miliseconds.
        </p>
        <pre><code><a href="javascript: void(0)" title="Collapse all expanded" class="nestedreport--slideupAll" duration="200">Collapse all</a></code></pre>

  - # ====== Custom Attribute: Default template options ==========
    id: 49839267289089439148
    identification: 
      attribute: 14
      name: Default template options
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTDC,DTCC
      always-evaluate: true

    help: 
      help-text: This attribute allows you to add extra funcionalities to nested report rendered in HTML data.

    entries: 
    - # ====== Entry: Strech report ================================
      id: 49839368260652446826
      entry: 
        sequence: 20
        display: Strech report
        return: SR

      advanced: 
        quick-pick: false

      help: 
        help-text: If this options is checked, nested report table is streched to 100% width of parent row.

    - # ====== Entry: Sorting data =================================
      id: 49839368667417447292
      entry: 
        sequence: 30
        display: Sorting data
        return: SD

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option is checked, nested report supports sorting via column headings. Data is sorted using JavaScript function. Sort function supports NUMBER and VARCHAR2 column type.

    - # ====== Entry: Extend default template ======================
      id: 49839519925052481469
      entry: 
        sequence: 40
        display: Extend default template
        return: EDT

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option is checked, default template can be extended with additional HTML before and after nested report. See <strong>Default template HTML</strong> attribute for more informations.

  - # ====== Custom Attribute: Loading indicator style ===========
    id: 50943665210054759308
    identification: 
      attribute: 12
      name: Loading indicator style
      scope: Component

    layout: 
      sequence: 15

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: ATR

    condition: 
      depending-on-custom-attribute: Default callback options # 50957662835167861162
      depending-on-condition-type: in list
      expression: LI
      always-evaluate: true

    help: 
      help-text: This attributes allows you to choose prefered style of loading indicator while fetching data.

    entries: 
    - # ====== Entry: Aligned to report ============================
      id: 50943668784941780267
      entry: 
        sequence: 10
        display: Aligned to report
        return: ATR

      advanced: 
        quick-pick: true

      help: 
        help-text: Loading indicator is aligned to center of affected elements.

    - # ====== Entry: Aligned to cell ==============================
      id: 50943669250552781310
      entry: 
        sequence: 20
        display: Aligned to cell
        return: ATC

      advanced: 
        quick-pick: true

      help: 
        help-text: Loading indicator is aligned to parent cell of triggering element.

    - # ====== Entry: Cell icon spinner ============================
      id: 50943669652528783117
      entry: 
        sequence: 30
        display: Cell icon spinner
        return: CIS

      advanced: 
        quick-pick: false

      help: 
        help-text: Loading indicator is embeded within cell after triggering element.

    - # ====== Entry: Replace cell content =========================
      id: 50943876933489112966
      entry: 
        sequence: 40
        display: Replace cell content
        return: RCC

      advanced: 
        quick-pick: false

      help: 
        help-text: Loading indicator replaces cell content. After AJAX finishes fetching data, cell content is restored to initial content.

  - # ====== Custom Attribute: Include Mustache library ==========
    id: 50957660994574861160
    identification: 
      attribute: 3
      name: Include Mustache library
      scope: Application

    layout: 
      sequence: 30

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: Y

    entries: 
    - # ====== Entry: Yes ==========================================
      id: 50957661373660861160
      entry: 
        sequence: 10
        display: Yes
        return: Y

      advanced: 
        quick-pick: false

      help: 
        help-text: Mustache library will be included.

    - # ====== Entry: No ===========================================
      id: 50957661888464861161
      entry: 
        sequence: 20
        display: No
        return: N

      advanced: 
        quick-pick: false

      help: 
        help-text: Mustache library won't be included. This library is essential for the plugin to work.

  - # ====== Custom Attribute: Details query =====================
    id: 50957662439918861161
    identification: 
      attribute: 1
      name: Details query
      scope: Component

    layout: 
      sequence: 1010

    settings: 
      type: SQL Query
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    help: 
      help-text: |
        <p>
          Enter valid SQL query that returns at least one row. Fetched data is rendered in default or custom template depending on the plugin configuration.
        </p>
        <h4>
          Narrowing results
        </h4>
        <p>
          Condition value(s) should be column(s) name(s) from parent region enclosed by # characters (or parent report column aliases if used).
        </p>
        <pre>
        ...
        where
          COLUMN_ID = '#COLUMN_ID#'
        </pre>
        <h4>
          How does it work?
        </h4>
        <p>
          When column name is enclosed by <code>#</code> characters and dynamic action is triggered, the plugin scans triggering element table row for DOM elements matching one of following jQuery selectors:
        </p>
        <pre>
        $('[headers="COLUMN_ID"]').text() or
        $('[headers="NR_COLUMN_ID"]').text() or
        $('span[class*="COLUMN_ID"]').text()
        </pre>
        <p>
          It means that the plugin looks for value from GUI witin
        </p>
        <ul>
          <li>TD element with header attribute set to <code>COLUMN_ID</code> (Classic report, Interactive report) or</li>
          <li>TD element with header attribute set to <code>NR_COLUMN_ID</code> (Nested reports) or</li>
          <li>span element with class COLUMN_ID (universal)</li>
        </ul>
        <p>
          The text value from matched element is used to replace #COLUMN_ID# in details row attribute.
        </p>
        <p>
          The safest way of binding GUI report with the plugin query is to use 
        </p>
        <pre><code><span class="COLUMN_NAME" style="display:none">#COLUMN_NAME#</span></code></pre>
        <p>
          next to nested report's triggering element (e.g. anchor).
        </p>
        <h4>
          Custom columns heading
        </h4>
        <p>
          Custom column headings can be used in <code>Default template</code>.
        </p>
        <ul>
          <li>To create nested report with empty heading use column alias <code>DERIVIED<XX>_EMPTY</code> </li>
          <li>To create nested report with font awesome icon heading use column alias <code>DERIVIED<XX>_FA_<NAME></code> </li>
        </ul>   
        <p>
          where 
        </p>
        <ul>
          <li><XX> is 2 digits string e.g. 01</li>
          <li><NAME> is icon class name with "_" instead of "-" (e.g. SEARCH or SITE_MAP)</li>
        </ul>

    examples: 
      examples: |
        <h4>
          Referencing affected report column
        </h4>
        <p>
          Affected report query (Classic report)
        </p>  
        <pre>
        select
          ORDER_ID,
          CUSTOMER_ID as CUST_ID,
          ORDER_TOTAL,
          TAGS
        from
          DEMO_ORDERS
        </pre>
        <p>
          Details query might look like  
        </p>  
        <pre>
        select
          CUSTOMER_ID,
          CUST_FIRST_NAME as "First name",
          CUST_LAST_NAME,
          PHONE_NUMBER1,
          CREDIT_LIMIT
        from
          DEMO_CUSTOMERS
        where
          customer_id = #CUST_ID#
        </pre>
        <p>
          The plugin will replace #CUST_ID# with value of the column CUST_ID within affected report.
        </p>  
        
        <h4>
          Referencing not visible columns
        </h4>
        <p>
          When column in report has "Type" = "Hidden" it is not rendered in report and can't be referenced by the plugin. To reference such column, its value has to be provided within visible column.
        </p>
        <p>
          In Classic report are defined columns
        </p>
        <ul>
          <li>column CUSTOMER_ID, Type = "Hidden"</li>
          <li>column CUSTOMER, Type = "Plain Text"</li>
        </ul>
        <p>
          Column CUSTOMER is visible and can contain CUSTOMER_ID value. To do so go to section Column Formatting > HTML Expression and enter HTML:
        </p>
        <pre>
        <span class="CUSTOMER_ID" style="display:none">#CUSTOMER_ID#</span>#CUSTOMER#  
        </pre>

  - # ====== Custom Attribute: Default callback options ==========
    id: 50957662835167861162
    identification: 
      attribute: 2
      name: Default callback options
      scope: Component

    layout: 
      sequence: 7

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: 'CE:AA:CR'

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTDC,CTDC
      always-evaluate: true

    help: 
      help-text: |
        <p>
          This attribute allows you to add extra functionalities to nested report rendered in new report row.
        </p>

    entries: 
    - # ====== Entry: Loading indicator ============================
      id: 49084500605956558619
      entry: 
        sequence: 40
        display: Loading indicator
        return: LI

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option is checked, loading indicator is shown each time plugin fetches data from db (AJAX). Loading indicator style can be set in <strong>Loading indicator style</strong> attribute.

    - # ====== Entry: Cache results ================================
      id: 50957663241429861162
      entry: 
        sequence: 5
        display: Cache results
        return: CR

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option checked, <b>Details query</b> resulting data is cached on first plugin use.

    - # ====== Entry: Collapse expanded ============================
      id: 50957663687534861162
      entry: 
        sequence: 10
        display: Collapse expanded
        return: CE

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option checked, every expanded row will be collapsed before new row is expanded.

    - # ====== Entry: Set max height ===============================
      id: 50957664188003861162
      entry: 
        sequence: 20
        display: Set max height
        return: SMH

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option checked, max-height property is added to expanded row. Value in pixels must be provided in <strong>Set max height</strong> attribute.

    - # ====== Entry: Add animation ================================
      id: 50957664723934861162
      entry: 
        sequence: 30
        display: Add animation
        return: AA

      advanced: 
        quick-pick: false

      help: 
        help-text: If this option checked, animation is added while expanding / collapsing row.

  - # ====== Custom Attribute: Mode ==============================
    id: 50957665671002861163
    identification: 
      attribute: 3
      name: Mode
      scope: Component

    layout: 
      sequence: 5

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: DTDC

    help: 
      help-text: Picked option defines the plugin customization level.

    entries: 
    - # ====== Entry: Default template & default callback ==========
      id: 50957666094099861163
      entry: 
        sequence: 10
        display: Default template & default callback
        return: DTDC

      advanced: 
        quick-pick: false

      help: 
        help-text: Default plugin behaviour. Resulting rows of data are rendered in default template (table of data) along with default callback settings.

    - # ====== Entry: Default template & custom callback ===========
      id: 50957666647036861163
      entry: 
        sequence: 20
        display: Default template & custom callback
        return: DTCC

      advanced: 
        quick-pick: false

      help: 
        help-text: When this option is selected, resulting rows of data are rendered with template provided in custom template attribute.

    - # ====== Entry: Custom template & default callback ===========
      id: 50957667115512861163
      entry: 
        sequence: 30
        display: Custom template & default callback
        return: CTDC

      advanced: 
        quick-pick: false

      help: 
        help-text: When this option is selected, resulting rows of data are rendered with default template and custom JS callback function defined in custom callback attribute.

    - # ====== Entry: Custom template & custom callback ============
      id: 50957667560022861164
      entry: 
        sequence: 40
        display: Custom template & custom callback
        return: CTCC

      advanced: 
        quick-pick: false

      help: 
        help-text: When this option is selected, developer decides how template for resulting rows of data is build and how results should be displayed after receiving rows from database.

  - # ====== Custom Attribute: Custom template ===================
    id: 50957668060240861164
    identification: 
      attribute: 4
      name: Custom template
      scope: Component

    layout: 
      sequence: 1020

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: CTDC,CTCC
      always-evaluate: true

    help: 
      help-text: |
        <p>
          Templates are rendered by Mustache JavaScript library. To read more about Mustache API vistit https://github.com/janl/mustache.js#usage.
        </p>
        <p>
          Template is rendered from JSON object with two attributes: data and headers. Data attribute reference array of rows and headers attribute reference array of columns description.
        </p>
        
        <h4>
          Headers template
        </h4>
        <p>
          Use {{#headers}} and {{/headers}} tags to mark beginning and ending of header section. To render column name use {{COLUMN_NAME}} and to display column type use {{COLUMN_TYPE}}.
        </p>
        
        <h4>
          Data template
        </h4>
        <p>
          Use {{#data}} and {{/data}} to mark beginning and ending of single row template. To render column value use {{COLUMN_NAME}} or {{Column alias}}. "COLUMN_NAME" is column name without alias in details query attribute, and "Column alias" is column alias in details query attribute.
        </p>
        <p>
          See examples below to learn how custom template might look like.
        </p>

    examples: 
      examples: |
        <p>
          Assuming your details query is defined as below:
        </p>
        <pre>
        select
          CUSTOMER_ID,
          CUST_FIRST_NAME as "First name",
          CUST_LAST_NAME,
          PHONE_NUMBER1,
          CREDIT_LIMIT
        from
          DEMO_CUSTOMERS
        where
          customer_id = #CUSTOMER_ID#
        </pre>
        <p>
          Your custom template might look like:
        </p>
        <pre>
        <table>
          <tr>
            <th>Column name</th>
            <th>Column type</th>
          </tr>
          {{#headers}}
          <tr>
            <td>{{COLUMN_NAME}}</td>
            <td>{{COLUMN_TYPE}}</td>
          </tr>
          {{/headers}}
        </table>
        {{#data}}
        <div class="customRow">
          <div>
            <span class="label">
              Customer name
            </span>
            <span class="value">
              <span class="fa fa-user"></span> {{First name}} {{CUST_LAST_NAME}}
            </span>
          </div>
          <div>
            <span class="label">
              Customer phone number
            </span>
            <span class="value">
              <span class="fa fa-phone"></span> {{PHONE_NUMBER1}}
            </span>
          </div>
          <div>
            <span class="label">
              Customer credit limit
            </span>
            <span class="value">
              <span class="fa fa-credit-card"></span> {{CREDIT_LIMIT}}
            </span>
          </div>
        </div>
        {{/data}}  
        </pre>
        <p>
        column CUST_FIRST_NAME is referenced by its alias {{First name}} defined in details query. Others columns are referenced by their names.
        </p>
        <p>
          List of columns are presented in table with two columns and rows of data are rendered in div blocks.
        </p>
        <h4>Example CSS</h4>
        <pre>
        .customRow > div {
          display: inline-block;
          margin-right: 10px;
        }
         
        .customRow > div:last-child {
          margin-right: 0px;
        }
         
        .customRow span.label {
          font-weight: bold;
          display: block;
        }
        .customRow span.value {
          font-size: 120%;
          padding: 5px;
          display: block;
        }  
        </pre>

  - # ====== Custom Attribute: Custom callback ===================
    id: 50957668476747861164
    identification: 
      attribute: 5
      name: Custom callback
      scope: Component

    layout: 
      sequence: 1015

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTCC,CTCC
      always-evaluate: true

    help: 
      help-text: |
        <p>
          Custom JavaScript code is used to steer how rendered template is embedded within affected report. JavaScript code is executed each time the plugin retrieves details query records.
        </p>
        <p>
          This code has access to the following plugin attributes:
        </p>
        <dl>
          <dt>this.callback.triggeringElement</dt>
          <dd>A reference to the jQuery object of the element that triggered the dynamic action.</dd>
        
          <dt>this.callback.affactedReport</dt>
          <dd>A reference to the jQuery object containg master report pointed in Affected Elements.</dd>
        
        
          <dt>this.callback.renderedTemplate</dt>
          <dd>The rendered default/custom template based on results from details query attribute.</dd>
        
          <dt>this.callback.browserEvent</dt>
          <dd>The event object of event that triggered the plugin.</dd>
        
        </dl>

  - # ====== Custom Attribute: Background color ==================
    id: 50957668927537861164
    identification: 
      attribute: 6
      name: Background color
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Color
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: '#EBEBEB'

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTDC,CTDC
      always-evaluate: true

    help: 
      help-text: |
        <p>Pick HEX color to be applied as background color for retrieved rows.</p>
        <dl>
          <dt>Default value</dt>
          <dd>#EBEBEB</dd>
        </dl>

  - # ====== Custom Attribute: Set max height ====================
    id: 50957669267014861164
    identification: 
      attribute: 7
      name: Set max height
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Number
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      unit: px

    default: 
      value: 300

    condition: 
      depending-on-custom-attribute: Default callback options # 50957662835167861162
      depending-on-condition-type: in list
      expression: SMH
      always-evaluate: true

    help: 
      help-text: |
        <p>
          Set max-height property for container with retrieved rows of data.
        </p>
        
        <dl>
          <dt>Default value</dt>
          <dd>300</dd>
        </dl>

  - # ====== Custom Attribute: Border color ======================
    id: 50957669710721861165
    identification: 
      attribute: 8
      name: Border color
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Color
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: '#c5c5c5'

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTDC,CTDC
      always-evaluate: true

    help: 
      help-text: |
        <p>
          Pick HEX color to be applied as border color for retrieved rows.
        </p>
        
        <dl>
          <dt>Default value</dt>
          <dd>#C5C5C5</dd>
        </dl>

  - # ====== Custom Attribute: Highlight row color ===============
    id: 50957670060365861165
    identification: 
      attribute: 9
      name: Highlight row color
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Color
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: '#e3e3e3'

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTDC,CTDC
      always-evaluate: true

    help: 
      help-text: |
        <p>
          Pick HEX color to be applied as border color for retrieved rows.
        </p>
        
        <dl>
          <dt>Default value</dt>
          <dd>#F2F2F2</dd>
        </dl>

  - # ====== Custom Attribute: Custom callback settings ==========
    id: 50957670541457861165
    identification: 
      attribute: 10
      name: Custom callback settings
      scope: Component

    layout: 
      sequence: 55

    settings: 
      type: Checkboxes
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: 'CR:LI'

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: not in list
      expression: DTDC,CTDC
      always-evaluate: true

    help: 
      help-text: Custom callback attribute allows you to add extra efects to rendered data.

    entries: 
    - # ====== Entry: Cache results ================================
      id: 50957670865413861165
      entry: 
        sequence: 10
        display: Cache results
        return: CR

      advanced: 
        quick-pick: false

      help: 
        help-text: If checked the result of the SQL query is retrieved only once for the specified table cell or jQuery selector.

  - # ====== Custom Attribute: When no data found ================
    id: 50957671885682861166
    identification: 
      attribute: 11
      name: When no data found
      scope: Component

    layout: 
      sequence: 1015

    settings: 
      type: Textarea
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      maximum-length: 4000

    default: 
      value: No data found

    condition: 
      depending-on-custom-attribute: Mode # 50957665671002861163
      depending-on-condition-type: in list
      expression: DTDC,CTDC
      always-evaluate: true

    help: 
      help-text: Enter text or HTML to be displayed when details query returns 0 rows.

  events: 
  - # ====== Event: uc_default_callback ==========================
    id: 50587188142657935893
    identification: 
      name: Default callback
      internal-name: uc_default_callback

  files: 
  - # ====== File: uc.nestedreport.js ============================
    id: 47877925455859033449
    identification: 
      file-name: uc.nestedreport.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: uc.nestedreports.css ==========================
    id: 47877925710405033447
    identification: 
      file-name: uc.nestedreports.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: uc.nestedreportsCommon.js =====================
    id: 47877926113561033445
    identification: 
      file-name: uc.nestedreportsCommon.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: mustache.js ===================================
    id: 50957675505520861169
    identification: 
      file-name: mustache.js

    attributes: 
      mime-type: application/javascript
      file-character-set: Unicode UTF-8

