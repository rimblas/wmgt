SQL> rest export /tournament/
-- Generated by SQLcl REST Data Services 22.4.0.0
-- Exported REST Definitions from ORDS Schema Version 22.4.3.r0331239
-- Schema: WKSP_WMGT   Date: Thu Feb 16 00:34:15 CST 2023
--
BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'WKSP_WMGT',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'wmgt',
      p_auto_rest_auth      => FALSE);    

  ORDS.DEFINE_MODULE(
      p_module_name    => 'Tournament Rounds',
      p_base_path      => '/tournament/',
      p_items_per_page =>  25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Tournament Rounds',
      p_pattern        => 'rounds',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Tournament Rounds',
      p_pattern        => 'rounds',
      p_method         => 'GET',
      p_source_type    => 'json/item',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select json_object(
       ''season''  value to_number(substr(s.week,2,2))
     , ''round''   value s.round_num
     , ''easyCourse'' value s.easy_course_code
     , ''hardCourse'' value s.hard_course_code
     , ''scores'' value (
            select json_arrayagg(
                   json_object(
                    ''player''          value r.account
                  , ''id''              value r.player_id
                  , ''easyRoundTotal''  value r.easy_roundTotal
                  , ''easyRoundScore''  value r.easy_roundScore
                  , ''easyScorecard''   value (
                      select json_arrayagg(u.par order by u.h)
                       from wmg_rounds_unpivot_mv u
                      where u.player_id = r.player_id
                        and u.course_id = s.easy_course_id
                        and u.week = r.week
                     )
                  , ''hardScorecard''   value (
                      select json_arrayagg(u.par order by u.h)
                       from wmg_rounds_unpivot_mv u
                      where u.player_id = r.player_id
                        and u.course_id = s.hard_course_id
                        and u.week = r.week
                     ) RETURNING CLOB 
               ) RETURNING CLOB
             ) 
             from (
             select week
                  , account
                  , player_id
                  , easy_roundScore
                  , hard_roundScore
                  , easy_roundTotal
                  , hard_roundTotal
             from (

             select r.week
                  , r.account
                  , r.player_id
                  , r.round_strokes
                  , r.under_par
                  , r.course_mode
               from wmg_rounds_v r
              where r.week = :week -- s.week
                -- and r.account in (''INDY'', ''his.Dudeness'') -- , ''Blutes87'', ''Browner'', ''B8Y'')
              )
              pivot (
                  sum(under_par) roundScore, sum(round_strokes) roundTotal for course_mode in (
                    ''E'' EASY, ''H'' HARD
                   )
                )
             
             ) r
       ) RETURNING CLOB
    ) d
  from wmg_tournament_sessions_v s
 where s.week = :week
'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'Tournament Rounds',
      p_pattern            => 'rounds',
      p_method             => 'GET',
      p_name               => 'week',
      p_bind_variable_name => 'week',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      


  COMMIT; 
END;
SQL> spool of
